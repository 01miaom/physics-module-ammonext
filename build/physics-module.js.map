{"version":3,"file":"physics-module.js","sources":["../src/api.js","../src/eventable.js","../src/constraints/ConeTwistConstraint.js","../src/constraints/HingeConstraint.js","../src/constraints/PointConstraint.js","../src/constraints/SliderConstraint.js","../src/constraints/DOFConstraint.js","../src/vehicle/vehicle.js","../bundle-worker/workerhelper.js","../src/worker.js","../src/modules/WorldModule.js","../src/modules/physicsPrototype.js","../src/modules/PhysicsModule.js","../src/modules/BoxModule.js","../src/modules/CompoundModule.js","../src/modules/CapsuleModule.js","../src/modules/ConcaveModule.js","../src/modules/ConeModule.js","../src/modules/ConvexModule.js","../src/modules/CylinderModule.js","../src/modules/HeightfieldModule.js","../src/modules/PlaneModule.js","../src/modules/SphereModule.js","../src/modules/SoftbodyModule.js","../src/modules/ClothModule.js","../src/modules/RopeModule.js","../src/modules/controls/FirstPersonModule.js"],"sourcesContent":["import {\n  Vector3,\n  Matrix4,\n  Quaternion\n} from 'three';\n\nconst MESSAGE_TYPES = {\n  WORLDREPORT: 0,\n  COLLISIONREPORT: 1,\n  VEHICLEREPORT: 2,\n  CONSTRAINTREPORT: 3,\n  SOFTREPORT: 4\n};\n\nconst REPORT_ITEMSIZE = 14,\n  COLLISIONREPORT_ITEMSIZE = 5,\n  VEHICLEREPORT_ITEMSIZE = 9,\n  CONSTRAINTREPORT_ITEMSIZE = 6;\n\nconst temp1Vector3 = new Vector3(),\n  temp2Vector3 = new Vector3(),\n  temp1Matrix4 = new Matrix4(),\n  temp1Quat = new Quaternion();\n\nconst getEulerXYZFromQuaternion = (x, y, z, w) => {\n  return new Vector3(\n    Math.atan2(2 * (x * w - y * z), (w * w - x * x - y * y + z * z)),\n    Math.asin(2 * (x * z + y * w)),\n    Math.atan2(2 * (z * w - x * y), (w * w + x * x - y * y - z * z))\n  );\n};\n\nconst getQuatertionFromEuler = (x, y, z) => {\n  const c1 = Math.cos(y);\n  const s1 = Math.sin(y);\n  const c2 = Math.cos(-z);\n  const s2 = Math.sin(-z);\n  const c3 = Math.cos(x);\n  const s3 = Math.sin(x);\n  const c1c2 = c1 * c2;\n  const s1s2 = s1 * s2;\n\n  return {\n    w: c1c2 * c3 - s1s2 * s3,\n    x: c1c2 * s3 + s1s2 * c3,\n    y: s1 * c2 * c3 + c1 * s2 * s3,\n    z: c1 * s2 * c3 - s1 * c2 * s3\n  };\n};\n\nconst convertWorldPositionToObject = (position, object) => {\n  temp1Matrix4.identity(); // reset temp matrix\n\n  // Set the temp matrix's rotation to the object's rotation\n  temp1Matrix4.identity().makeRotationFromQuaternion(object.quaternion);\n\n  // Invert rotation matrix in order to \"unrotate\" a point back to object space\n  temp1Matrix4.getInverse(temp1Matrix4);\n\n  // Yay! Temp vars!\n  temp1Vector3.copy(position);\n  temp2Vector3.copy(object.position);\n\n  // Apply the rotation\n  return temp1Vector3.sub(temp2Vector3).applyMatrix4(temp1Matrix4);\n};\n\nconst addObjectChildren = function (parent, object) {\n  for (let i = 0; i < object.children.length; i++) {\n    const child = object.children[i];\n    const physics = child.component.use('physics');\n\n    if (physics) {\n      const data = physics.data;\n\n      child.updateMatrix();\n      child.updateMatrixWorld();\n\n      temp1Vector3.setFromMatrixPosition(child.matrixWorld);\n      temp1Quat.setFromRotationMatrix(child.matrixWorld);\n\n      data.position_offset = {\n        x: temp1Vector3.x,\n        y: temp1Vector3.y,\n        z: temp1Vector3.z\n      };\n\n      data.rotation = {\n        x: temp1Quat.x,\n        y: temp1Quat.y,\n        z: temp1Quat.z,\n        w: temp1Quat.w\n      };\n\n      parent.component.use('physics').data.children.push(data);\n    }\n\n    addObjectChildren(parent, child);\n  }\n};\n\nexport {\n  getEulerXYZFromQuaternion,\n  getQuatertionFromEuler,\n  convertWorldPositionToObject,\n  addObjectChildren,\n\n  MESSAGE_TYPES,\n  REPORT_ITEMSIZE,\n  COLLISIONREPORT_ITEMSIZE,\n  VEHICLEREPORT_ITEMSIZE,\n  CONSTRAINTREPORT_ITEMSIZE,\n\n  temp1Vector3,\n  temp2Vector3,\n  temp1Matrix4,\n  temp1Quat\n};\n","export class Eventable {\n  constructor() {\n    this._eventListeners = {};\n  }\n\n  addEventListener(event_name, callback) {\n    if (!this._eventListeners.hasOwnProperty(event_name))\n      this._eventListeners[event_name] = [];\n\n    this._eventListeners[event_name].push(callback);\n  }\n\n  removeEventListener(event_name, callback) {\n    let index;\n\n    if (!this._eventListeners.hasOwnProperty(event_name)) return false;\n\n    if ((index = this._eventListeners[event_name].indexOf(callback)) >= 0) {\n      this._eventListeners[event_name].splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  dispatchEvent(event_name) {\n    let i;\n    const parameters = Array.prototype.splice.call(arguments, 1);\n\n    if (this._eventListeners.hasOwnProperty(event_name)) {\n      for (i = 0; i < this._eventListeners[event_name].length; i++)\n        this._eventListeners[event_name][i].apply(this, parameters);\n    }\n  }\n\n  static make(obj) {\n    obj.prototype.addEventListener = Eventable.prototype.addEventListener;\n    obj.prototype.removeEventListener = Eventable.prototype.removeEventListener;\n    obj.prototype.dispatchEvent = Eventable.prototype.dispatchEvent;\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class ConeTwistConstraint {\n  constructor(obja, objb, position) {\n    const objecta = obja;\n    const objectb = obja;\n\n    if (position === undefined) console.error('Both objects must be defined in a ConeTwistConstraint.');\n\n    this.type = 'conetwist';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.objectb = objectb._physijs.id;\n    this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    this.axisa = {x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z};\n    this.axisb = {x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z};\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  }\n\n  setLimit(x, y, z) {\n    if(this.worldModule) this.worldModule.execute('conetwist_setLimit', {constraint: this.id, x, y, z});\n  }\n\n  enableMotor() {\n    if(this.worldModule) this.worldModule.execute('conetwist_enableMotor', {constraint: this.id});\n  }\n\n  setMaxMotorImpulse(max_impulse) {\n    if(this.worldModule) this.worldModule.execute('conetwist_setMaxMotorImpulse', {constraint: this.id, max_impulse});\n  }\n\n  setMotorTarget(target) {\n    if (target instanceof THREE.Vector3)\n      target = new THREE.Quaternion().setFromEuler(new THREE.Euler(target.x, target.y, target.z));\n    else if (target instanceof THREE.Euler)\n      target = new THREE.Quaternion().setFromEuler(target);\n    else if (target instanceof THREE.Matrix4)\n      target = new THREE.Quaternion().setFromRotationMatrix(target);\n\n    if(this.worldModule) this.worldModule.execute('conetwist_setMotorTarget', {\n      constraint: this.id,\n      x: target.x,\n      y: target.y,\n      z: target.z,\n      w: target.w\n    });\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class HingeConstraint {\n  constructor(obja, objb, position, axis) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'hinge';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.position = position.clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  }\n\n  setLimits(low, high, bias_factor, relaxation_factor) {\n    if (this.worldModule) this.worldModule.execute('hinge_setLimits', {\n      constraint: this.id,\n      low,\n      high,\n      bias_factor,\n      relaxation_factor\n    });\n  }\n\n  enableAngularMotor(velocity, acceleration) {\n    if (this.worldModule) this.worldModule.execute('hinge_enableAngularMotor', {\n      constraint: this.id,\n      velocity,\n      acceleration\n    });\n  }\n\n  disableMotor() {\n    if (this.worldModule) this.worldModule.execute('hinge_disableMotor', {constraint: this.id});\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class PointConstraint {\n  constructor(obja, objb, position) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if (position === undefined) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'point';\n    this.appliedImpulse = 0;\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb\n    };\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class SliderConstraint {\n  constructor(obja, objb, position, axis) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if (axis === undefined) {\n      axis = position;\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'slider';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject(position, objecta).clone();\n    this.axis = axis;\n\n    if (objectb) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject(position, objectb).clone();\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axis: this.axis\n    };\n  }\n\n  setLimits(lin_lower, lin_upper, ang_lower, ang_upper) {\n    if (this.worldModule) this.worldModule.execute('slider_setLimits', {\n      constraint: this.id,\n      lin_lower,\n      lin_upper,\n      ang_lower,\n      ang_upper\n    });\n  }\n\n  setRestitution(linear, angular) {\n    if (this.worldModule) this.worldModule.execute(\n      'slider_setRestitution',\n      {\n        constraint: this.id,\n        linear,\n        angular\n      }\n    );\n  }\n\n  enableLinearMotor(velocity, acceleration) {\n    if (this.worldModule) this.worldModule.execute('slider_enableLinearMotor', {\n      constraint: this.id,\n      velocity,\n      acceleration\n    });\n  }\n\n  disableLinearMotor() {\n    if (this.worldModule) this.worldModule.execute('slider_disableLinearMotor', {constraint: this.id});\n  }\n\n  enableAngularMotor(velocity, acceleration) {\n    this.scene.execute('slider_enableAngularMotor', {\n      constraint: this.id,\n      velocity,\n      acceleration\n    });\n  }\n\n  disableAngularMotor() {\n    if (this.worldModule) this.worldModule.execute('slider_disableAngularMotor', {constraint: this.id});\n  }\n}\n","import {convertWorldPositionToObject} from '../api';\n\nexport class DOFConstraint {\n  constructor(obja, objb, position) {\n    const objecta = obja;\n    let objectb = objb;\n\n    if ( position === undefined ) {\n      position = objectb;\n      objectb = undefined;\n    }\n\n    this.type = 'dof';\n    this.appliedImpulse = 0;\n    this.worldModule = null; // Will be redefined by .addConstraint\n    this.objecta = objecta._physijs.id;\n    this.positiona = convertWorldPositionToObject( position, objecta ).clone();\n    this.axisa = { x: objecta.rotation.x, y: objecta.rotation.y, z: objecta.rotation.z };\n\n    if ( objectb ) {\n      this.objectb = objectb._physijs.id;\n      this.positionb = convertWorldPositionToObject( position, objectb ).clone();\n      this.axisb = { x: objectb.rotation.x, y: objectb.rotation.y, z: objectb.rotation.z };\n    }\n  }\n\n  getDefinition() {\n    return {\n      type: this.type,\n      id: this.id,\n      objecta: this.objecta,\n      objectb: this.objectb,\n      positiona: this.positiona,\n      positionb: this.positionb,\n      axisa: this.axisa,\n      axisb: this.axisb\n    };\n  }\n\n  setLinearLowerLimit(limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setLinearLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  setLinearUpperLimit (limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setLinearUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  setAngularLowerLimit (limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setAngularLowerLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  setAngularUpperLimit (limit) {\n    if (this.worldModule) this.worldModule.execute( 'dof_setAngularUpperLimit', { constraint: this.id, x: limit.x, y: limit.y, z: limit.z } );\n  }\n\n  enableAngularMotor (which) {\n    if (this.worldModule) this.worldModule.execute( 'dof_enableAngularMotor', { constraint: this.id, which: which } );\n  }\n\n  configureAngularMotor (which, low_angle, high_angle, velocity, max_force ) {\n    if (this.worldModule) this.worldModule.execute( 'dof_configureAngularMotor', { constraint: this.id, which: which, low_angle: low_angle, high_angle: high_angle, velocity: velocity, max_force: max_force } );\n  }\n\n  disableAngularMotor (which) {\n    if (this.worldModule) this.worldModule.execute( 'dof_disableAngularMotor', { constraint: this.id, which: which } );\n  }\n}\n","import {Mesh} from 'three';\nimport {VehicleTunning} from './tunning';\n\nexport class Vehicle {\n  constructor(mesh, tuning = new VehicleTuning()) {\n    this.mesh = mesh;\n    this.wheels = [];\n\n    this._physijs = {\n      id: getObjectId(),\n      rigidBody: mesh._physijs.id,\n      suspension_stiffness: tuning.suspension_stiffness,\n      suspension_compression: tuning.suspension_compression,\n      suspension_damping: tuning.suspension_damping,\n      max_suspension_travel: tuning.max_suspension_travel,\n      friction_slip: tuning.friction_slip,\n      max_suspension_force: tuning.max_suspension_force\n    };\n  }\n\n  addWheel(wheel_geometry, wheel_material, connection_point, wheel_direction, wheel_axle, suspension_rest_length, wheel_radius, is_front_wheel, tuning) {\n    const wheel = new Mesh(wheel_geometry, wheel_material);\n\n    wheel.castShadow = wheel.receiveShadow = true;\n    wheel.position.copy(wheel_direction).multiplyScalar(suspension_rest_length / 100).add(connection_point);\n\n    this.world.add(wheel);\n    this.wheels.push(wheel);\n\n    this.world.execute('addWheel', {\n      id: this._physijs.id,\n      connection_point: {x: connection_point.x, y: connection_point.y, z: connection_point.z},\n      wheel_direction: {x: wheel_direction.x, y: wheel_direction.y, z: wheel_direction.z},\n      wheel_axle: {x: wheel_axle.x, y: wheel_axle.y, z: wheel_axle.z},\n      suspension_rest_length,\n      wheel_radius,\n      is_front_wheel,\n      tuning\n    });\n  }\n\n  setSteering(amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined)\n      this.world.execute('setSteering', {id: this._physijs.id, wheel, steering: amount});\n    else if (this.wheels.length > 0) {\n      for (let i = 0; i < this.wheels.length; i++)\n        this.world.execute('setSteering', {id: this._physijs.id, wheel: i, steering: amount});\n    }\n  }\n\n  setBrake(amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined)\n      this.world.execute('setBrake', {id: this._physijs.id, wheel, brake: amount});\n    else if (this.wheels.length > 0) {\n      for (let i = 0; i < this.wheels.length; i++)\n        this.world.execute('setBrake', {id: this._physijs.id, wheel: i, brake: amount});\n    }\n  }\n\n  applyEngineForce(amount, wheel) {\n    if (wheel !== undefined && this.wheels[wheel] !== undefined)\n      this.world.execute('applyEngineForce', {id: this._physijs.id, wheel, force: amount});\n    else if (this.wheels.length > 0) {\n      for (let i = 0; i < this.wheels.length; i++)\n        this.world.execute('applyEngineForce', {id: this._physijs.id, wheel: i, force: amount});\n    }\n  }\n}\n","var TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder,\n    URL = window.URL || window.webkitURL,\n    Worker = window.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nexport default function shimWorker (filename, fn) {\n    return function ShimWorker (forceFallback) {\n        var o = this;\n\n        if (!fn) {\n            return new Worker(filename);\n        }\n        else if (Worker && !forceFallback) {\n            // Convert the function's inner code to a string to construct the worker\n            var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n                objURL = createSourceObject(source);\n\n            this[TARGET] = new Worker(objURL);\n            URL.revokeObjectURL(objURL);\n            return this[TARGET];\n        }\n        else {\n            var selfShim = {\n                    postMessage: function(m) {\n                        if (o.onmessage) {\n                            setTimeout(function(){ o.onmessage({ data: m, target: selfShim }) });\n                        }\n                    }\n                };\n\n            fn.call(selfShim);\n            this.postMessage = function(m) {\n                setTimeout(function(){ selfShim.onmessage({ data: m, target: o }) });\n            };\n            this.isThisThread = true;\n        }\n    };\n};\n\n// Test Worker capabilities\nif (Worker) {\n    var testWorker,\n        objURL = createSourceObject('self.onmessage = function () {}'),\n        testArray = new Uint8Array(1);\n\n    try {\n        // No workers via blobs in Edge 12 and IE 11 and lower :(\n        if (/(?:Trident|Edge)\\/(?:[567]|12)/i.test(navigator.userAgent)) {\n            throw new Error('Not available');\n        }\n        testWorker = new Worker(objURL);\n\n        // Native browser on some Samsung devices throws for transferables, let's detect it\n        testWorker.postMessage(testArray, [testArray.buffer]);\n    }\n    catch (e) {\n        Worker = null;\n    }\n    finally {\n        URL.revokeObjectURL(objURL);\n        if (testWorker) {\n            testWorker.terminate();\n        }\n    }\n}\n\nfunction createSourceObject(str) {\n    try {\n        return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n    }\n    catch (e) {\n        var blob = new BlobBuilder();\n        blob.append(str);\n        return URL.createObjectURL(blob.getBlob(type));\n    }\n}\n","import shimWorker from 'rollup-plugin-bundle-worker';\nexport default new shimWorker(\"../worker.js\", function (window, document) {\nvar self = this;\nconst transferableMessage = self.webkitPostMessage || self.postMessage,\n\n// enum\nMESSAGE_TYPES = {\n  WORLDREPORT: 0,\n  COLLISIONREPORT: 1,\n  VEHICLEREPORT: 2,\n  CONSTRAINTREPORT: 3,\n  SOFTREPORT: 4\n};\n\n  // temp variables\nlet _object,\n  _vector,\n  _transform,\n  _transform_pos,\n  _softbody_enabled = false,\n  last_simulation_duration = 0,\n\n  _num_objects = 0,\n  _num_rigidbody_objects = 0,\n  _num_softbody_objects = 0,\n  _num_wheels = 0,\n  _num_constraints = 0,\n  _softbody_report_size = 0,\n\n  // world variables\n  fixedTimeStep, // used when calling stepSimulation\n  last_simulation_time,\n\n  world,\n  _vec3_1,\n  _vec3_2,\n  _vec3_3,\n  _quat;\n\n  // private cache\nconst public_functions = {},\n  _objects = [],\n  _vehicles = [],\n  _constraints = [],\n  _objects_ammo = {},\n  _object_shapes = {},\n\n  // The following objects are to track objects that ammo.js doesn't clean\n  // up. All are cleaned up when they're corresponding body is destroyed.\n  // Unfortunately, it's very difficult to get at these objects from the\n  // body, so we have to track them ourselves.\n  _motion_states = {},\n  // Don't need to worry about it for cached shapes.\n  _noncached_shapes = {},\n  // A body with a compound shape always has a regular shape as well, so we\n  // have track them separately.\n  _compound_shapes = {};\n\n  // object reporting\nlet REPORT_CHUNKSIZE, // report array is increased in increments of this chunk size\n  worldreport,\n  softreport,\n  collisionreport,\n  vehiclereport,\n  constraintreport;\n\nconst WORLDREPORT_ITEMSIZE = 14, // how many float values each reported item needs\n  COLLISIONREPORT_ITEMSIZE = 5, // one float for each object id, and a Vec3 contact normal\n  VEHICLEREPORT_ITEMSIZE = 9, // vehicle id, wheel index, 3 for position, 4 for rotation\n  CONSTRAINTREPORT_ITEMSIZE = 6; // constraint id, offset object, offset, applied impulse\n\nconst ab = new ArrayBuffer(1);\n\ntransferableMessage(ab, [ab]);\nconst SUPPORT_TRANSFERABLE = (ab.byteLength === 0);\n\nconst getShapeFromCache = (cache_key) => {\n  if (_object_shapes[cache_key] !== undefined)\n    return _object_shapes[cache_key];\n\n  return null;\n};\n\nconst setShapeCache = (cache_key, shape) => {\n  _object_shapes[cache_key] = shape;\n};\n\nconst createShape = (description) => {\n  let shape;\n\n  _transform.setIdentity();\n  switch (description.type) {\n    case 'compound': {\n      shape = new Ammo.btCompoundShape();\n\n      break;\n    }\n    case 'plane': {\n      const cache_key = `plane_${description.normal.x}_${description.normal.y}_${description.normal.z}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        _vec3_1.setX(description.normal.x);\n        _vec3_1.setY(description.normal.y);\n        _vec3_1.setZ(description.normal.z);\n        shape = new Ammo.btStaticPlaneShape(_vec3_1, 0);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n    case 'box': {\n      const cache_key = `box_${description.width}_${description.height}_${description.depth}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        _vec3_1.setX(description.width / 2);\n        _vec3_1.setY(description.height / 2);\n        _vec3_1.setZ(description.depth / 2);\n        shape = new Ammo.btBoxShape(_vec3_1);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n    case 'sphere': {\n      const cache_key = `sphere_${description.radius}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        shape = new Ammo.btSphereShape(description.radius);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n    case 'cylinder': {\n      const cache_key = `cylinder_${description.width}_${description.height}_${description.depth}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        _vec3_1.setX(description.width / 2);\n        _vec3_1.setY(description.height / 2);\n        _vec3_1.setZ(description.depth / 2);\n        shape = new Ammo.btCylinderShape(_vec3_1);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n    case 'capsule': {\n      const cache_key = `capsule_${description.radius}_${description.height}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        // In Bullet, capsule height excludes the end spheres\n        shape = new Ammo.btCapsuleShape(description.radius, description.height - 2 * description.radius);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n    case 'cone': {\n      const cache_key = `cone_${description.radius}_${description.height}`;\n\n      if ((shape = getShapeFromCache(cache_key)) === null) {\n        shape = new Ammo.btConeShape(description.radius, description.height);\n        setShapeCache(cache_key, shape);\n      }\n\n      break;\n    }\n    case 'concave': {\n      const triangle_mesh = new Ammo.btTriangleMesh();\n      if (!description.data.length) return false;\n      const data = description.data;\n\n      for (let i = 0; i < data.length / 9; i++) {\n        _vec3_1.setX(data[i * 9]);\n        _vec3_1.setY(data[i * 9 + 1]);\n        _vec3_1.setZ(data[i * 9 + 2]);\n\n        _vec3_2.setX(data[i * 9 + 3]);\n        _vec3_2.setY(data[i * 9 + 4]);\n        _vec3_2.setZ(data[i * 9 + 5]);\n\n        _vec3_3.setX(data[i * 9 + 6]);\n        _vec3_3.setY(data[i * 9 + 7]);\n        _vec3_3.setZ(data[i * 9 + 8]);\n\n        triangle_mesh.addTriangle(\n          _vec3_1,\n          _vec3_2,\n          _vec3_3,\n          false\n        );\n      }\n\n      shape = new Ammo.btBvhTriangleMeshShape(\n        triangle_mesh,\n        true,\n        true\n      );\n\n      _noncached_shapes[description.id] = shape;\n\n      break;\n    }\n    case 'convex': {\n      shape = new Ammo.btConvexHullShape();\n      const data = description.data;\n\n      for (let i = 0; i < data.length / 3; i++) {\n        _vec3_1.setX(data[i * 3 ]);\n        _vec3_1.setY(data[i * 3 + 1]);\n        _vec3_1.setZ(data[i * 3 + 2]);\n\n        shape.addPoint(_vec3_1);\n      }\n\n      _noncached_shapes[description.id] = shape;\n\n      break;\n    }\n    case 'heightfield': {\n      const xpts = description.xpts,\n        ypts = description.ypts,\n        points = description.points,\n        ptr = Ammo._malloc(4 * xpts * ypts);\n\n      for (let i = 0, p = 0, p2 = 0; i < xpts; i++) {\n        for (let j = 0; j < ypts; j++) {\n          Ammo.HEAPF32[ptr + p2 >> 2] = points[p];\n\n          p++;\n          p2 += 4;\n        }\n      }\n\n      shape = new Ammo.btHeightfieldTerrainShape(\n        description.xpts,\n        description.ypts,\n        ptr,\n        1,\n        -description.absMaxHeight,\n        description.absMaxHeight,\n        1,\n        'PHY_FLOAT',\n        false\n      );\n\n      _noncached_shapes[description.id] = shape;\n      break;\n    }\n    default:\n      // Not recognized\n      return;\n  }\n\n  return shape;\n};\n\nconst createSoftBody = (description) => {\n  let body;\n\n  const softBodyHelpers = new Ammo.btSoftBodyHelpers();\n\n  switch (description.type) {\n    case 'softTrimesh': {\n      if (!description.aVertices.length) return false;\n\n      body = softBodyHelpers.CreateFromTriMesh(\n        world.getWorldInfo(),\n        description.aVertices,\n        description.aIndices,\n        description.aIndices.length / 3,\n        false\n      );\n\n      break;\n    }\n    case 'softClothMesh': {\n      const cr = description.corners;\n\n      body = softBodyHelpers.CreatePatch(\n        world.getWorldInfo(),\n        new Ammo.btVector3(cr[0], cr[1], cr[2]),\n        new Ammo.btVector3(cr[3], cr[4], cr[5]),\n        new Ammo.btVector3(cr[6], cr[7], cr[8]),\n        new Ammo.btVector3(cr[9], cr[10], cr[11]),\n        description.segments[0],\n        description.segments[1],\n        0,\n        true\n      );\n\n      break;\n    }\n    case 'softRopeMesh': {\n      const data = description.data;\n\n      body = softBodyHelpers.CreateRope(\n        world.getWorldInfo(),\n        new Ammo.btVector3(data[0], data[1], data[2]),\n        new Ammo.btVector3(data[3], data[4], data[5]),\n        data[6] - 1,\n        0\n      );\n\n      break;\n    }\n    default:\n      // Not recognized\n      return;\n  }\n\n  return body;\n};\n\npublic_functions.init = (params = {}) => {\n  if (params.wasmBuffer) {\n    importScripts(params.ammo);\n\n    self.Ammo = loadAmmoFromBinary(params.wasmBuffer);\n    transferableMessage({cmd: 'ammoLoaded'});\n    public_functions.makeWorld(params);\n  } else {\n    importScripts(params.ammo);\n    transferableMessage({cmd: 'ammoLoaded'});\n    public_functions.makeWorld(params);\n  }\n}\n\npublic_functions.makeWorld = (params = {}) => {\n  _transform = new Ammo.btTransform();\n  _transform_pos = new Ammo.btTransform();\n  _vec3_1 = new Ammo.btVector3(0, 0, 0);\n  _vec3_2 = new Ammo.btVector3(0, 0, 0);\n  _vec3_3 = new Ammo.btVector3(0, 0, 0);\n  _quat = new Ammo.btQuaternion(0, 0, 0, 0);\n\n  REPORT_CHUNKSIZE = params.reportsize || 50;\n\n  if (SUPPORT_TRANSFERABLE) {\n    // Transferable messages are supported, take advantage of them with TypedArrays\n    worldreport = new Float32Array(2 + REPORT_CHUNKSIZE * WORLDREPORT_ITEMSIZE); // message id + # of objects to report + chunk size * # of values per object\n    collisionreport = new Float32Array(2 + REPORT_CHUNKSIZE * COLLISIONREPORT_ITEMSIZE); // message id + # of collisions to report + chunk size * # of values per object\n    vehiclereport = new Float32Array(2 + REPORT_CHUNKSIZE * VEHICLEREPORT_ITEMSIZE); // message id + # of vehicles to report + chunk size * # of values per object\n    constraintreport = new Float32Array(2 + REPORT_CHUNKSIZE * CONSTRAINTREPORT_ITEMSIZE); // message id + # of constraints to report + chunk size * # of values per object\n  } else {\n    // Transferable messages are not supported, send data as normal arrays\n    worldreport = [];\n    collisionreport = [];\n    vehiclereport = [];\n    constraintreport = [];\n  }\n\n  worldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n  collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n  vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n  constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n\n  const collisionConfiguration = params.softbody\n    ? new Ammo.btSoftBodyRigidBodyCollisionConfiguration()\n    : new Ammo.btDefaultCollisionConfiguration(),\n    dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\n    solver = new Ammo.btSequentialImpulseConstraintSolver();\n\n  let broadphase;\n\n  if (!params.broadphase) params.broadphase = {type: 'dynamic'};\n  // TODO!!!\n  /* if (params.broadphase.type === 'sweepprune') {\n    extend(params.broadphase, {\n      aabbmin: {\n        x: -50,\n        y: -50,\n        z: -50\n      },\n\n      aabbmax: {\n        x: 50,\n        y: 50,\n        z: 50\n      },\n    });\n  }*/\n\n  switch (params.broadphase.type) {\n    case 'sweepprune':\n      _vec3_1.setX(params.broadphase.aabbmin.x);\n      _vec3_1.setY(params.broadphase.aabbmin.y);\n      _vec3_1.setZ(params.broadphase.aabbmin.z);\n\n      _vec3_2.setX(params.broadphase.aabbmax.x);\n      _vec3_2.setY(params.broadphase.aabbmax.y);\n      _vec3_2.setZ(params.broadphase.aabbmax.z);\n\n      broadphase = new Ammo.btAxisSweep3(\n        _vec3_1,\n        _vec3_2\n      );\n\n      break;\n    case 'dynamic':\n    default:\n      broadphase = new Ammo.btDbvtBroadphase();\n      break;\n  }\n\n  world = params.softbody\n    ? new Ammo.btSoftRigidDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration, new Ammo.btDefaultSoftBodySolver())\n    : new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration);\n  fixedTimeStep = params.fixedTimeStep;\n\n  if (params.softbody) _softbody_enabled = true;\n\n  transferableMessage({cmd: 'worldReady'});\n};\n\npublic_functions.setFixedTimeStep = (description) => {\n  fixedTimeStep = description;\n};\n\npublic_functions.setGravity = (description) => {\n  _vec3_1.setX(description.x);\n  _vec3_1.setY(description.y);\n  _vec3_1.setZ(description.z);\n  world.setGravity(_vec3_1);\n};\n\npublic_functions.appendAnchor = (description) => {\n  console.log(_objects[description.obj]);\n  _objects[description.obj]\n    .appendAnchor(\n      description.node,\n      _objects[description.obj2],\n      description.collisionBetweenLinkedBodies,\n      description.influence\n    );\n}\n\npublic_functions.addObject = (description) => {\n  let body, motionState;\n\n  if (description.type.indexOf('soft') !== -1) {\n    body = createSoftBody(description);\n\n    const sbConfig = body.get_m_cfg();\n\n    if (description.viterations) sbConfig.set_viterations(description.viterations);\n    if (description.piterations) sbConfig.set_piterations(description.piterations);\n    if (description.diterations) sbConfig.set_diterations(description.diterations);\n    if (description.citerations) sbConfig.set_citerations(description.citerations);\n    sbConfig.set_collisions(0x11);\n    sbConfig.set_kDF(description.friction);\n    sbConfig.set_kDP(description.damping);\n    if (description.pressure) sbConfig.set_kPR(description.pressure);\n    if (description.drag) sbConfig.set_kDG(description.drag);\n    if (description.lift) sbConfig.set_kLF(description.lift);\n    if (description.anchorHardness) sbConfig.set_kAHR(description.anchorHardness);\n    if (description.rigidHardness) sbConfig.set_kCHR(description.rigidHardness);\n\n    if (description.klst) body.get_m_materials().at(0).set_m_kLST(description.klst);\n    if (description.kast) body.get_m_materials().at(0).set_m_kAST(description.kast);\n    if (description.kvst) body.get_m_materials().at(0).set_m_kVST(description.kvst);\n\n    Ammo.castObject(body, Ammo.btCollisionObject).getCollisionShape().setMargin(description.margin ? description.margin : 0.1);\n\n    // Ammo.castObject(body, Ammo.btCollisionObject).getCollisionShape().setLocalScaling(_vec3_1);\n    body.setActivationState(description.state || 4);\n    body.type = 0; // SoftBody.\n    if (description.type === 'softRopeMesh') body.rope = true;\n    if (description.type === 'softClothMesh') body.cloth = true;\n\n    _transform.setIdentity();\n\n    _vec3_1.setX(description.position.x);\n    _vec3_1.setY(description.position.y);\n    _vec3_1.setZ(description.position.z);\n    _transform.setOrigin(_vec3_1);\n\n    _quat.setX(description.rotation.x);\n    _quat.setY(description.rotation.y);\n    _quat.setZ(description.rotation.z);\n    _quat.setW(description.rotation.w);\n    _transform.setRotation(_quat);\n\n    body.transform(_transform);\n\n    _vec3_1.setX(description.scale.x);\n    _vec3_1.setY(description.scale.y);\n    _vec3_1.setZ(description.scale.z);\n\n    body.scale(_vec3_1);\n\n    body.setTotalMass(description.mass, false);\n    world.addSoftBody(body, 1, -1);\n    if (description.type === 'softTrimesh') _softbody_report_size += body.get_m_faces().size() * 3;\n    else if (description.type === 'softRopeMesh') _softbody_report_size += body.get_m_nodes().size();\n    else _softbody_report_size += body.get_m_nodes().size() * 3;\n\n    _num_softbody_objects++;\n  } else {\n    let shape = createShape(description);\n\n    if (!shape) return;\n\n    // If there are children then this is a compound shape\n    if (description.children) {\n      const compound_shape = new Ammo.btCompoundShape();\n      compound_shape.addChildShape(_transform, shape);\n\n      for (let i = 0; i < description.children.length; i++) {\n        const _child = description.children[i];\n\n        const trans = new Ammo.btTransform();\n        trans.setIdentity();\n\n        _vec3_1.setX(_child.position_offset.x);\n        _vec3_1.setY(_child.position_offset.y);\n        _vec3_1.setZ(_child.position_offset.z);\n        trans.setOrigin(_vec3_1);\n\n        _quat.setX(_child.rotation.x);\n        _quat.setY(_child.rotation.y);\n        _quat.setZ(_child.rotation.z);\n        _quat.setW(_child.rotation.w);\n        trans.setRotation(_quat);\n\n        shape = createShape(description.children[i]);\n        compound_shape.addChildShape(trans, shape);\n        Ammo.destroy(trans);\n      }\n\n      shape = compound_shape;\n      _compound_shapes[description.id] = shape;\n    }\n\n    _vec3_1.setX(description.scale.x);\n    _vec3_1.setY(description.scale.y);\n    _vec3_1.setZ(description.scale.z);\n\n    shape.setLocalScaling(_vec3_1);\n    shape.setMargin(description.margin ? description.margin : 0);\n\n    _vec3_1.setX(0);\n    _vec3_1.setY(0);\n    _vec3_1.setZ(0);\n    shape.calculateLocalInertia(description.mass, _vec3_1);\n\n    _transform.setIdentity();\n\n    _vec3_2.setX(description.position.x);\n    _vec3_2.setY(description.position.y);\n    _vec3_2.setZ(description.position.z);\n    _transform.setOrigin(_vec3_2);\n\n    _quat.setX(description.rotation.x);\n    _quat.setY(description.rotation.y);\n    _quat.setZ(description.rotation.z);\n    _quat.setW(description.rotation.w);\n    _transform.setRotation(_quat);\n\n    motionState = new Ammo.btDefaultMotionState(_transform); // #TODO: btDefaultMotionState supports center of mass offset as second argument - implement\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(description.mass, motionState, shape, _vec3_1);\n\n    rbInfo.set_m_friction(description.friction);\n    rbInfo.set_m_restitution(description.restitution);\n    rbInfo.set_m_linearDamping(description.damping);\n    rbInfo.set_m_angularDamping(description.damping);\n\n    body = new Ammo.btRigidBody(rbInfo);\n    body.setActivationState(description.state || 4);\n    Ammo.destroy(rbInfo);\n\n    if (typeof description.collision_flags !== 'undefined') body.setCollisionFlags(description.collision_flags);\n\n    if (description.group && description.mask) world.addRigidBody(body, description.group, description.mask);\n    else world.addRigidBody(body);\n    body.type = 1; // RigidBody.\n    _num_rigidbody_objects++;\n  }\n\n  body.activate();\n\n  body.id = description.id;\n  _objects[body.id] = body;\n  _motion_states[body.id] = motionState;\n\n  _objects_ammo[body.a === undefined ? body.ptr : body.a] = body.id;\n  _num_objects++;\n\n  transferableMessage({cmd: 'objectReady', params: body.id});\n};\n\npublic_functions.addVehicle = (description) => {\n  const vehicle_tuning = new Ammo.btVehicleTuning();\n\n  vehicle_tuning.set_m_suspensionStiffness(description.suspension_stiffness);\n  vehicle_tuning.set_m_suspensionCompression(description.suspension_compression);\n  vehicle_tuning.set_m_suspensionDamping(description.suspension_damping);\n  vehicle_tuning.set_m_maxSuspensionTravelCm(description.max_suspension_travel);\n  vehicle_tuning.set_m_maxSuspensionForce(description.max_suspension_force);\n\n  const vehicle = new Ammo.btRaycastVehicle(\n    vehicle_tuning,\n    _objects[description.rigidBody],\n    new Ammo.btDefaultVehicleRaycaster(world)\n  );\n\n  vehicle.tuning = vehicle_tuning;\n  _objects[description.rigidBody].setActivationState(4);\n  vehicle.setCoordinateSystem(0, 1, 2);\n\n  world.addVehicle(vehicle);\n  _vehicles[description.id] = vehicle;\n};\npublic_functions.removeVehicle = (description) => {\n  _vehicles[description.id] = null;\n};\n\npublic_functions.addWheel = (description) => {\n  if (_vehicles[description.id] !== undefined) {\n    let tuning = _vehicles[description.id].tuning;\n    if (description.tuning !== undefined) {\n      tuning = new Ammo.btVehicleTuning();\n      tuning.set_m_suspensionStiffness(description.tuning.suspension_stiffness);\n      tuning.set_m_suspensionCompression(description.tuning.suspension_compression);\n      tuning.set_m_suspensionDamping(description.tuning.suspension_damping);\n      tuning.set_m_maxSuspensionTravelCm(description.tuning.max_suspension_travel);\n      tuning.set_m_maxSuspensionForce(description.tuning.max_suspension_force);\n    }\n\n    _vec3_1.setX(description.connection_point.x);\n    _vec3_1.setY(description.connection_point.y);\n    _vec3_1.setZ(description.connection_point.z);\n\n    _vec3_2.setX(description.wheel_direction.x);\n    _vec3_2.setY(description.wheel_direction.y);\n    _vec3_2.setZ(description.wheel_direction.z);\n\n    _vec3_3.setX(description.wheel_axle.x);\n    _vec3_3.setY(description.wheel_axle.y);\n    _vec3_3.setZ(description.wheel_axle.z);\n\n    _vehicles[description.id].addWheel(\n      _vec3_1,\n      _vec3_2,\n      _vec3_3,\n      description.suspension_rest_length,\n      description.wheel_radius,\n      tuning,\n      description.is_front_wheel\n    );\n  }\n\n  _num_wheels++;\n\n  if (SUPPORT_TRANSFERABLE) {\n    vehiclereport = new Float32Array(1 + _num_wheels * VEHICLEREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n    vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n  } else vehiclereport = [MESSAGE_TYPES.VEHICLEREPORT];\n};\n\npublic_functions.setSteering = (details) => {\n  if (_vehicles[details.id] !== undefined) _vehicles[details.id].setSteeringValue(details.steering, details.wheel);\n};\n\npublic_functions.setBrake = (details) => {\n  if (_vehicles[details.id] !== undefined) _vehicles[details.id].setBrake(details.brake, details.wheel);\n};\n\npublic_functions.applyEngineForce = (details) => {\n  if (_vehicles[details.id] !== undefined) _vehicles[details.id].applyEngineForce(details.force, details.wheel);\n};\n\npublic_functions.removeObject = (details) => {\n  if (_objects[details.id].type === 0) {\n    _num_softbody_objects--;\n    _softbody_report_size -= _objects[details.id].get_m_nodes().size();\n    world.removeSoftBody(_objects[details.id]);\n  } else if (_objects[details.id].type === 1) {\n    _num_rigidbody_objects--;\n    world.removeRigidBody(_objects[details.id]);\n    Ammo.destroy(_motion_states[details.id]);\n  }\n\n  Ammo.destroy(_objects[details.id]);\n  if (_compound_shapes[details.id]) Ammo.destroy(_compound_shapes[details.id]);\n  if (_noncached_shapes[details.id]) Ammo.destroy(_noncached_shapes[details.id]);\n\n  _objects_ammo[_objects[details.id].a === undefined ? _objects[details.id].a : _objects[details.id].ptr] = null;\n  _objects[details.id] = null;\n  _motion_states[details.id] = null;\n\n  if (_compound_shapes[details.id]) _compound_shapes[details.id] = null;\n  if (_noncached_shapes[details.id]) _noncached_shapes[details.id] = null;\n  _num_objects--;\n};\n\npublic_functions.updateTransform = (details) => {\n  _object = _objects[details.id];\n\n  if (_object.type === 1) {\n    _object.getMotionState().getWorldTransform(_transform);\n\n    if (details.pos) {\n      _vec3_1.setX(details.pos.x);\n      _vec3_1.setY(details.pos.y);\n      _vec3_1.setZ(details.pos.z);\n      _transform.setOrigin(_vec3_1);\n    }\n\n    if (details.quat) {\n      _quat.setX(details.quat.x);\n      _quat.setY(details.quat.y);\n      _quat.setZ(details.quat.z);\n      _quat.setW(details.quat.w);\n      _transform.setRotation(_quat);\n    }\n\n    _object.setWorldTransform(_transform);\n    _object.activate();\n  } else if (_object.type === 0) {\n    // _object.getWorldTransform(_transform);\n\n    if (details.pos) {\n      _vec3_1.setX(details.pos.x);\n      _vec3_1.setY(details.pos.y);\n      _vec3_1.setZ(details.pos.z);\n      _transform.setOrigin(_vec3_1);\n    }\n\n    if (details.quat) {\n      _quat.setX(details.quat.x);\n      _quat.setY(details.quat.y);\n      _quat.setZ(details.quat.z);\n      _quat.setW(details.quat.w);\n      _transform.setRotation(_quat);\n    }\n\n    _object.transform(_transform);\n  }\n};\n\npublic_functions.updateMass = (details) => {\n  // #TODO: changing a static object into dynamic is buggy\n  _object = _objects[details.id];\n\n  // Per http://www.bulletphysics.org/Bullet/phpBB3/viewtopic.php?p=&f=9&t=3663#p13816\n  world.removeRigidBody(_object);\n\n  _vec3_1.setX(0);\n  _vec3_1.setY(0);\n  _vec3_1.setZ(0);\n\n  _object.setMassProps(details.mass, _vec3_1);\n  world.addRigidBody(_object);\n  _object.activate();\n};\n\npublic_functions.applyCentralImpulse = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].applyCentralImpulse(_vec3_1);\n  _objects[details.id].activate();\n};\n\npublic_functions.applyImpulse = (details) => {\n  _vec3_1.setX(details.impulse_x);\n  _vec3_1.setY(details.impulse_y);\n  _vec3_1.setZ(details.impulse_z);\n\n  _vec3_2.setX(details.x);\n  _vec3_2.setY(details.y);\n  _vec3_2.setZ(details.z);\n\n  _objects[details.id].applyImpulse(\n    _vec3_1,\n    _vec3_2\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.applyTorque = (details) => {\n  _vec3_1.setX(details.torque_x);\n  _vec3_1.setY(details.torque_y);\n  _vec3_1.setZ(details.torque_z);\n\n  _objects[details.id].applyTorque(\n    _vec3_1\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.applyCentralForce = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].applyCentralForce(_vec3_1);\n  _objects[details.id].activate();\n};\n\npublic_functions.applyForce = (details) => {\n  _vec3_1.setX(details.force_x);\n  _vec3_1.setY(details.force_y);\n  _vec3_1.setZ(details.force_z);\n\n  _vec3_2.setX(details.x);\n  _vec3_2.setY(details.y);\n  _vec3_2.setZ(details.z);\n\n  _objects[details.id].applyForce(\n    _vec3_1,\n    _vec3_2\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.onSimulationResume = () => {\n  last_simulation_time = Date.now();\n};\n\npublic_functions.setAngularVelocity = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setAngularVelocity(\n    _vec3_1\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.setLinearVelocity = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setLinearVelocity(\n    _vec3_1\n  );\n  _objects[details.id].activate();\n};\n\npublic_functions.setAngularFactor = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setAngularFactor(\n      _vec3_1\n  );\n};\n\npublic_functions.setLinearFactor = (details) => {\n  _vec3_1.setX(details.x);\n  _vec3_1.setY(details.y);\n  _vec3_1.setZ(details.z);\n\n  _objects[details.id].setLinearFactor(\n    _vec3_1\n  );\n};\n\npublic_functions.setDamping = (details) => {\n  _objects[details.id].setDamping(details.linear, details.angular);\n};\n\npublic_functions.setCcdMotionThreshold = (details) => {\n  _objects[details.id].setCcdMotionThreshold(details.threshold);\n};\n\npublic_functions.setCcdSweptSphereRadius = (details) => {\n  _objects[details.id].setCcdSweptSphereRadius(details.radius);\n};\n\npublic_functions.addConstraint = (details) => {\n  let constraint;\n\n  switch (details.type) {\n\n    case 'point': {\n      if (details.objectb === undefined) {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        constraint = new Ammo.btPoint2PointConstraint(\n          _objects[details.objecta],\n          _vec3_1\n        );\n      } else {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        constraint = new Ammo.btPoint2PointConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          _vec3_1,\n          _vec3_2\n        );\n      }\n      break;\n    }\n    case 'hinge': {\n      if (details.objectb === undefined) {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.axis.x);\n        _vec3_2.setY(details.axis.y);\n        _vec3_2.setZ(details.axis.z);\n\n        constraint = new Ammo.btHingeConstraint(\n          _objects[details.objecta],\n          _vec3_1,\n          _vec3_2\n        );\n\n      } else {\n        _vec3_1.setX(details.positiona.x);\n        _vec3_1.setY(details.positiona.y);\n        _vec3_1.setZ(details.positiona.z);\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        _vec3_3.setX(details.axis.x);\n        _vec3_3.setY(details.axis.y);\n        _vec3_3.setZ(details.axis.z);\n\n        constraint = new Ammo.btHingeConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          _vec3_1,\n          _vec3_2,\n          _vec3_3,\n          _vec3_3\n        );\n      }\n      break;\n    }\n    case 'slider': {\n      let transformb;\n      const transforma = new Ammo.btTransform();\n\n      _vec3_1.setX(details.positiona.x);\n      _vec3_1.setY(details.positiona.y);\n      _vec3_1.setZ(details.positiona.z);\n\n      transforma.setOrigin(_vec3_1);\n\n      let rotation = transforma.getRotation();\n      rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);\n      transforma.setRotation(rotation);\n\n      if (details.objectb) {\n        transformb = new Ammo.btTransform();\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        transformb.setOrigin(_vec3_2);\n\n        rotation = transformb.getRotation();\n        rotation.setEuler(details.axis.x, details.axis.y, details.axis.z);\n        transformb.setRotation(rotation);\n\n        constraint = new Ammo.btSliderConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          transforma,\n          transformb,\n          true\n        );\n      } else {\n        constraint = new Ammo.btSliderConstraint(\n          _objects[details.objecta],\n          transforma,\n          true\n        );\n      }\n\n      constraint.ta = transforma;\n      constraint.tb = transformb;\n\n      Ammo.destroy(transforma);\n      if (transformb !== undefined) Ammo.destroy(transformb);\n\n      break;\n    }\n    case 'conetwist': {\n      const transforma = new Ammo.btTransform();\n      transforma.setIdentity();\n\n      const transformb = new Ammo.btTransform();\n      transformb.setIdentity();\n\n      _vec3_1.setX(details.positiona.x);\n      _vec3_1.setY(details.positiona.y);\n      _vec3_1.setZ(details.positiona.z);\n\n      _vec3_2.setX(details.positionb.x);\n      _vec3_2.setY(details.positionb.y);\n      _vec3_2.setZ(details.positionb.z);\n\n      transforma.setOrigin(_vec3_1);\n      transformb.setOrigin(_vec3_2);\n\n      let rotation = transforma.getRotation();\n      rotation.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);\n      transforma.setRotation(rotation);\n\n      rotation = transformb.getRotation();\n      rotation.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);\n      transformb.setRotation(rotation);\n\n      constraint = new Ammo.btConeTwistConstraint(\n        _objects[details.objecta],\n        _objects[details.objectb],\n        transforma,\n        transformb\n      );\n\n      constraint.setLimit(Math.PI, 0, Math.PI);\n\n      constraint.ta = transforma;\n      constraint.tb = transformb;\n\n      Ammo.destroy(transforma);\n      Ammo.destroy(transformb);\n\n      break;\n    }\n    case 'dof': {\n      let transformb;\n\n      const transforma = new Ammo.btTransform();\n      transforma.setIdentity();\n\n      _vec3_1.setX(details.positiona.x);\n      _vec3_1.setY(details.positiona.y);\n      _vec3_1.setZ(details.positiona.z);\n\n      transforma.setOrigin(_vec3_1);\n\n      let rotation = transforma.getRotation();\n      rotation.setEulerZYX(-details.axisa.z, -details.axisa.y, -details.axisa.x);\n      transforma.setRotation(rotation);\n\n      if (details.objectb) {\n        transformb = new Ammo.btTransform();\n        transformb.setIdentity();\n\n        _vec3_2.setX(details.positionb.x);\n        _vec3_2.setY(details.positionb.y);\n        _vec3_2.setZ(details.positionb.z);\n\n        transformb.setOrigin(_vec3_2);\n\n        rotation = transformb.getRotation();\n        rotation.setEulerZYX(-details.axisb.z, -details.axisb.y, -details.axisb.x);\n        transformb.setRotation(rotation);\n\n        constraint = new Ammo.btGeneric6DofConstraint(\n          _objects[details.objecta],\n          _objects[details.objectb],\n          transforma,\n          transformb,\n          true\n        );\n      } else {\n        constraint = new Ammo.btGeneric6DofConstraint(\n          _objects[details.objecta],\n          transforma,\n          true\n        );\n      }\n\n      constraint.ta = transforma;\n      constraint.tb = transformb;\n\n      Ammo.destroy(transforma);\n      if (transformb !== undefined) Ammo.destroy(transformb);\n\n      break;\n    }\n    default:\n      return;\n  }\n\n  world.addConstraint(constraint);\n\n  constraint.a = _objects[details.objecta];\n  constraint.b = _objects[details.objectb];\n\n  constraint.enableFeedback();\n  _constraints[details.id] = constraint;\n  _num_constraints++;\n\n  if (SUPPORT_TRANSFERABLE) {\n    constraintreport = new Float32Array(1 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE); // message id & ( # of objects to report * # of values per object )\n    constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n  } else constraintreport = [MESSAGE_TYPES.CONSTRAINTREPORT];\n};\n\npublic_functions.removeConstraint = (details) => {\n  const constraint = _constraints[details.id];\n\n  if (constraint !== undefined) {\n    world.removeConstraint(constraint);\n    _constraints[details.id] = null;\n    _num_constraints--;\n  }\n};\n\npublic_functions.constraint_setBreakingImpulseThreshold = (details) => {\n  const constraint = _constraints[details.id];\n  if (constraint !== undefind) constraint.setBreakingImpulseThreshold(details.threshold);\n};\n\npublic_functions.simulate = (params = {}) => {\n  if (world) {\n    if (params.timeStep && params.timeStep < fixedTimeStep)\n      params.timeStep = fixedTimeStep;\n\n    params.maxSubSteps = params.maxSubSteps || Math.ceil(params.timeStep / fixedTimeStep); // If maxSubSteps is not defined, keep the simulation fully up to date\n\n    world.stepSimulation(params.timeStep, params.maxSubSteps, fixedTimeStep);\n\n    if (_vehicles.length > 0) reportVehicles();\n    reportCollisions();\n    if (_constraints.length > 0) reportConstraints();\n    reportWorld();\n    if (_softbody_enabled) reportWorld_softbodies();\n  }\n};\n\n// Constraint functions\npublic_functions.hinge_setLimits = (params) => {\n  _constraints[params.constraint].setLimit(params.low, params.high, 0, params.bias_factor, params.relaxation_factor);\n};\n\npublic_functions.hinge_enableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.enableAngularMotor(true, params.velocity, params.acceleration);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.hinge_disableMotor = (params) => {\n  _constraints[params.constraint].enableMotor(false);\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_setLimits = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setLowerLinLimit(params.lin_lower || 0);\n  constraint.setUpperLinLimit(params.lin_upper || 0);\n\n  constraint.setLowerAngLimit(params.ang_lower || 0);\n  constraint.setUpperAngLimit(params.ang_upper || 0);\n};\n\npublic_functions.slider_setRestitution = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setSoftnessLimLin(params.linear || 0);\n  constraint.setSoftnessLimAng(params.angular || 0);\n};\n\npublic_functions.slider_enableLinearMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setTargetLinMotorVelocity(params.velocity);\n  constraint.setMaxLinMotorForce(params.acceleration);\n  constraint.setPoweredLinMotor(true);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_disableLinearMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setPoweredLinMotor(false);\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_enableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setTargetAngMotorVelocity(params.velocity);\n  constraint.setMaxAngMotorForce(params.acceleration);\n  constraint.setPoweredAngMotor(true);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.slider_disableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setPoweredAngMotor(false);\n  constraint.a.activate();\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.conetwist_setLimit = (params) => {\n  _constraints[params.constraint].setLimit(params.z, params.y, params.x); // ZYX order\n};\n\npublic_functions.conetwist_enableMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.enableMotor(true);\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.conetwist_setMaxMotorImpulse = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.setMaxMotorImpulse(params.max_impulse);\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.conetwist_setMotorTarget = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _quat.setX(params.x);\n  _quat.setY(params.y);\n  _quat.setZ(params.z);\n  _quat.setW(params.w);\n\n  constraint.setMotorTarget(_quat);\n\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.conetwist_disableMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n  constraint.enableMotor(false);\n  constraint.a.activate();\n  constraint.b.activate();\n};\n\npublic_functions.dof_setLinearLowerLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setLinearLowerLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_setLinearUpperLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setLinearUpperLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_setAngularLowerLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setAngularLowerLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_setAngularUpperLimit = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  _vec3_1.setX(params.x);\n  _vec3_1.setY(params.y);\n  _vec3_1.setZ(params.z);\n\n  constraint.setAngularUpperLimit(_vec3_1);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_enableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint];\n\n  const motor = constraint.getRotationalLimitMotor(params.which);\n  motor.set_m_enableMotor(true);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_configureAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint],\n    motor = constraint.getRotationalLimitMotor(params.which);\n\n  motor.set_m_loLimit(params.low_angle);\n  motor.set_m_hiLimit(params.high_angle);\n  motor.set_m_targetVelocity(params.velocity);\n  motor.set_m_maxMotorForce(params.max_force);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\npublic_functions.dof_disableAngularMotor = (params) => {\n  const constraint = _constraints[params.constraint],\n    motor = constraint.getRotationalLimitMotor(params.which);\n\n  motor.set_m_enableMotor(false);\n  constraint.a.activate();\n\n  if (constraint.b) constraint.b.activate();\n};\n\nconst reportWorld = () => {\n  if (SUPPORT_TRANSFERABLE && worldreport.length < 2 + _num_rigidbody_objects * WORLDREPORT_ITEMSIZE) {\n    worldreport = new Float32Array(\n      2// message id & # objects in report\n      + (Math.ceil(_num_rigidbody_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * WORLDREPORT_ITEMSIZE // # of values needed * item size\n    );\n\n    worldreport[0] = MESSAGE_TYPES.WORLDREPORT;\n  }\n\n  worldreport[1] = _num_rigidbody_objects; // record how many objects we're reporting on\n\n  {\n    let i = 0,\n      index = _objects.length;\n\n    while (index--) {\n      const object = _objects[index];\n\n      if (object && object.type === 1) { // RigidBodies.\n        // #TODO: we can't use center of mass transform when center of mass can change,\n        //        but getMotionState().getWorldTransform() screws up on objects that have been moved\n        // object.getMotionState().getWorldTransform( transform );\n        // object.getMotionState().getWorldTransform(_transform);\n\n        const transform = object.getCenterOfMassTransform();\n        const origin = transform.getOrigin();\n        const rotation = transform.getRotation();\n\n        // add values to report\n        const offset = 2 + (i++) * WORLDREPORT_ITEMSIZE;\n\n        worldreport[offset] = object.id;\n\n        worldreport[offset + 1] = origin.x();\n        worldreport[offset + 2] = origin.y();\n        worldreport[offset + 3] = origin.z();\n\n        worldreport[offset + 4] = rotation.x();\n        worldreport[offset + 5] = rotation.y();\n        worldreport[offset + 6] = rotation.z();\n        worldreport[offset + 7] = rotation.w();\n\n        _vector = object.getLinearVelocity();\n        worldreport[offset + 8] = _vector.x();\n        worldreport[offset + 9] = _vector.y();\n        worldreport[offset + 10] = _vector.z();\n\n        _vector = object.getAngularVelocity();\n        worldreport[offset + 11] = _vector.x();\n        worldreport[offset + 12] = _vector.y();\n        worldreport[offset + 13] = _vector.z();\n      }\n    }\n  }\n\n  if (SUPPORT_TRANSFERABLE) transferableMessage(worldreport.buffer, [worldreport.buffer]);\n  else transferableMessage(worldreport);\n};\n\nconst reportWorld_softbodies = () => {\n  // TODO: Add SUPPORTTRANSFERABLE.\n\n  softreport = new Float32Array(\n    2 // message id & # objects in report\n    + _num_softbody_objects * 2\n    + _softbody_report_size * 6\n  );\n\n  softreport[0] = MESSAGE_TYPES.SOFTREPORT;\n  softreport[1] = _num_softbody_objects; // record how many objects we're reporting on\n\n  {\n    let offset = 2,\n      index = _objects.length;\n\n    while (index--) {\n      const object = _objects[index];\n\n      if (object && object.type === 0) { // SoftBodies.\n\n        softreport[offset] = object.id;\n\n        const offsetVert = offset + 2;\n\n        if (object.rope === true) {\n          const nodes = object.get_m_nodes();\n          const size = nodes.size();\n          softreport[offset + 1] = size;\n\n          for (let i = 0; i < size; i++) {\n            const node = nodes.at(i);\n            const vert = node.get_m_x();\n            const off = offsetVert + i * 3;\n\n            softreport[off] = vert.x();\n            softreport[off + 1] = vert.y();\n            softreport[off + 2] = vert.z();\n          }\n\n          offset += size * 3 + 2;\n        }\n        else if (object.cloth) {\n          const nodes = object.get_m_nodes();\n          const size = nodes.size();\n          softreport[offset + 1] = size;\n\n          for (let i = 0; i < size; i++) {\n            const node = nodes.at(i);\n            const vert = node.get_m_x();\n            const normal = node.get_m_n();\n            const off = offsetVert + i * 6;\n\n            softreport[off] = vert.x();\n            softreport[off + 1] = vert.y();\n            softreport[off + 2] = vert.z();\n\n            softreport[off + 3] = normal.x();\n            softreport[off + 4] = normal.y();\n            softreport[off + 5] = normal.z();\n          }\n\n          offset += size * 6 + 2;\n        }\n        else {\n          const faces = object.get_m_faces();\n          const size = faces.size();\n          softreport[offset + 1] = size;\n\n          for (let i = 0; i < size; i++) {\n            const face = faces.at(i);\n\n            const node1 = face.get_m_n(0);\n            const node2 = face.get_m_n(1);\n            const node3 = face.get_m_n(2);\n\n            const vert1 = node1.get_m_x();\n            const vert2 = node2.get_m_x();\n            const vert3 = node3.get_m_x();\n\n            const normal1 = node1.get_m_n();\n            const normal2 = node2.get_m_n();\n            const normal3 = node3.get_m_n();\n\n            const off = offsetVert + i * 18;\n\n            softreport[off] = vert1.x();\n            softreport[off + 1] = vert1.y();\n            softreport[off + 2] = vert1.z();\n\n            softreport[off + 3] = normal1.x();\n            softreport[off + 4] = normal1.y();\n            softreport[off + 5] = normal1.z();\n\n            softreport[off + 6] = vert2.x();\n            softreport[off + 7] = vert2.y();\n            softreport[off + 8] = vert2.z();\n\n            softreport[off + 9] = normal2.x();\n            softreport[off + 10] = normal2.y();\n            softreport[off + 11] = normal2.z();\n\n            softreport[off + 12] = vert3.x();\n            softreport[off + 13] = vert3.y();\n            softreport[off + 14] = vert3.z();\n\n            softreport[off + 15] = normal3.x();\n            softreport[off + 16] = normal3.y();\n            softreport[off + 17] = normal3.z();\n          }\n\n          offset += size * 18 + 2;\n        }\n      }\n    }\n  }\n\n  // if (SUPPORT_TRANSFERABLE) transferableMessage(softreport.buffer, [softreport.buffer]);\n  // else transferableMessage(softreport);\n  transferableMessage(softreport);\n};\n\nconst reportCollisions = () => {\n  const dp = world.getDispatcher(),\n    num = dp.getNumManifolds();\n    // _collided = false;\n\n  if (SUPPORT_TRANSFERABLE) {\n    if (collisionreport.length < 2 + num * COLLISIONREPORT_ITEMSIZE) {\n      collisionreport = new Float32Array(\n        2 // message id & # objects in report\n        + (Math.ceil(_num_objects / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * COLLISIONREPORT_ITEMSIZE // # of values needed * item size\n      );\n      collisionreport[0] = MESSAGE_TYPES.COLLISIONREPORT;\n    }\n  }\n\n  collisionreport[1] = 0; // how many collisions we're reporting on\n\n  for (let i = 0; i < num; i++) {\n    const manifold = dp.getManifoldByIndexInternal(i),\n      num_contacts = manifold.getNumContacts();\n\n    if (num_contacts === 0) continue;\n\n    for (let j = 0; j < num_contacts; j++) {\n      const pt = manifold.getContactPoint(j);\n\n      // if ( pt.getDistance() < 0 ) {\n      const offset = 2 + (collisionreport[1]++) * COLLISIONREPORT_ITEMSIZE;\n      collisionreport[offset] = _objects_ammo[manifold.getBody0().ptr];\n      collisionreport[offset + 1] = _objects_ammo[manifold.getBody1().ptr];\n\n      _vector = pt.get_m_normalWorldOnB();\n      collisionreport[offset + 2] = _vector.x();\n      collisionreport[offset + 3] = _vector.y();\n      collisionreport[offset + 4] = _vector.z();\n      break;\n      // }\n      // transferableMessage(_objects_ammo);\n    }\n  }\n\n  if (SUPPORT_TRANSFERABLE) transferableMessage(collisionreport.buffer, [collisionreport.buffer]);\n  else transferableMessage(collisionreport);\n};\n\nconst reportVehicles = function () {\n  if (SUPPORT_TRANSFERABLE) {\n    if (vehiclereport.length < 2 + _num_wheels * VEHICLEREPORT_ITEMSIZE) {\n      vehiclereport = new Float32Array(\n        2 // message id & # objects in report\n        + (Math.ceil(_num_wheels / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * VEHICLEREPORT_ITEMSIZE // # of values needed * item size\n      );\n      vehiclereport[0] = MESSAGE_TYPES.VEHICLEREPORT;\n    }\n  }\n\n  {\n    let i = 0,\n      j = 0,\n      index = _vehicles.length;\n\n    while (index--) {\n      if (_vehicles[index]) {\n        const vehicle = _vehicles[index];\n\n        for (j = 0; j < vehicle.getNumWheels(); j++) {\n          // vehicle.updateWheelTransform( j, true );\n          // transform = vehicle.getWheelTransformWS( j );\n          const transform = vehicle.getWheelInfo(j).get_m_worldTransform();\n\n          const origin = transform.getOrigin();\n          const rotation = transform.getRotation();\n\n          // add values to report\n          const offset = 1 + (i++) * VEHICLEREPORT_ITEMSIZE;\n\n          vehiclereport[offset] = index;\n          vehiclereport[offset + 1] = j;\n\n          vehiclereport[offset + 2] = origin.x();\n          vehiclereport[offset + 3] = origin.y();\n          vehiclereport[offset + 4] = origin.z();\n\n          vehiclereport[offset + 5] = rotation.x();\n          vehiclereport[offset + 6] = rotation.y();\n          vehiclereport[offset + 7] = rotation.z();\n          vehiclereport[offset + 8] = rotation.w();\n        }\n      }\n    }\n\n    if (SUPPORT_TRANSFERABLE && j !== 0) transferableMessage(vehiclereport.buffer, [vehiclereport.buffer]);\n    else if (j !== 0) transferableMessage(vehiclereport);\n  }\n};\n\nconst reportConstraints = function () {\n  if (SUPPORT_TRANSFERABLE) {\n    if (constraintreport.length < 2 + _num_constraints * CONSTRAINTREPORT_ITEMSIZE) {\n      constraintreport = new Float32Array(\n        2 // message id & # objects in report\n        + (Math.ceil(_num_constraints / REPORT_CHUNKSIZE) * REPORT_CHUNKSIZE) * CONSTRAINTREPORT_ITEMSIZE // # of values needed * item size\n      );\n      constraintreport[0] = MESSAGE_TYPES.CONSTRAINTREPORT;\n    }\n  }\n\n  {\n    let offset = 0,\n      i = 0,\n      index = _constraints.lenght;\n\n    while (index--) {\n      if (_constraints[index]) {\n        const constraint = _constraints[index];\n        const offset_body = constraint.a;\n        const transform = constraint.ta;\n        const origin = transform.getOrigin();\n\n        // add values to report\n        offset = 1 + (i++) * CONSTRAINTREPORT_ITEMSIZE;\n\n        constraintreport[offset] = index;\n        constraintreport[offset + 1] = offset_body.id;\n        constraintreport[offset + 2] = origin.x;\n        constraintreport[offset + 3] = origin.y;\n        constraintreport[offset + 4] = origin.z;\n        constraintreport[offset + 5] = constraint.getBreakingImpulseThreshold();\n      }\n    }\n\n    if (SUPPORT_TRANSFERABLE && i !== 0) transferableMessage(constraintreport.buffer, [constraintreport.buffer]);\n    else if (i !== 0) transferableMessage(constraintreport);\n  }\n};\n\nself.onmessage = function (event) {\n  if (event.data instanceof Float32Array) {\n    // transferable object\n    switch (event.data[0]) {\n      case MESSAGE_TYPES.WORLDREPORT: {\n        worldreport = new Float32Array(event.data);\n        break;\n      }\n      case MESSAGE_TYPES.COLLISIONREPORT: {\n        collisionreport = new Float32Array(event.data);\n        break;\n      }\n      case MESSAGE_TYPES.VEHICLEREPORT: {\n        vehiclereport = new Float32Array(event.data);\n        break;\n      }\n      case MESSAGE_TYPES.CONSTRAINTREPORT: {\n        constraintreport = new Float32Array(event.data);\n        break;\n      }\n      default:\n    }\n\n    return;\n  } else if (event.data.cmd && public_functions[event.data.cmd]) public_functions[event.data.cmd](event.data.params);\n};\n\n\n});","import {\n  Scene as SceneNative,\n  Mesh,\n  SphereGeometry,\n  MeshNormalMaterial,\n  BoxGeometry,\n  Vector3\n} from 'three';\n\nimport {Loop} from 'whs';\n\nimport {Vehicle} from '../vehicle/vehicle';\nimport {Eventable} from '../eventable';\n\nimport {\n  addObjectChildren,\n  MESSAGE_TYPES,\n  temp1Vector3,\n  temp1Matrix4,\n  REPORT_ITEMSIZE,\n  COLLISIONREPORT_ITEMSIZE,\n  VEHICLEREPORT_ITEMSIZE,\n  CONSTRAINTREPORT_ITEMSIZE\n} from '../api';\n\nimport PhysicsWorker from 'worker!../worker.js';\n\nexport class WorldModule extends Eventable {\n  constructor(params) {\n    super();\n\n    this.params = Object.assign({\n      fixedTimeStep: 1/60,\n      rateLimit: true,\n      ammo: \"\",\n      softbody: false,\n      gravity: new Vector3(0, -100, 0)\n    }, params);\n\n    const start = performance.now();\n\n    this.worker = new PhysicsWorker();\n    this.worker.transferableMessage = this.worker.webkitPostMessage || this.worker.postMessage;\n\n    this.isLoaded = false;\n\n    this.loader = new Promise((resolve, reject) => {\n      if (params.wasm) {\n        fetch(params.wasm)\n          .then(response => response.arrayBuffer())\n          .then(buffer => {\n            this.params.wasmBuffer = buffer;\n\n            this.execute('init', this.params);\n            // console.log(\"Physics loading time: \" + (performance.now() - start) + \"ms\");\n            resolve();\n          });\n      } else {\n        this.execute('init', this.params);\n        resolve();\n      }\n    });\n\n    this.loader.then(() => {this.isLoaded = true});\n\n    this._materials_ref_counts = {};\n    this._objects = {};\n    this._vehicles = {};\n    this._constraints = {};\n    this._is_simulating = false;\n    this.getObjectId = (() => {\n      let _id = 1;\n      return () => {\n        return _id++;\n      };\n    })();\n\n    // Test SUPPORT_TRANSFERABLE\n\n    const ab = new ArrayBuffer(1);\n    this.worker.transferableMessage(ab, [ab]);\n    this.SUPPORT_TRANSFERABLE = (ab.byteLength === 0);\n\n    this.worker.onmessage = (event) => {\n      let _temp,\n        data = event.data;\n\n      if (data instanceof ArrayBuffer && data.byteLength !== 1)// byteLength === 1 is the worker making a SUPPORT_TRANSFERABLE test\n        data = new Float32Array(data);\n\n      if (data instanceof Float32Array) {\n        // transferable object\n        switch (data[0]) {\n          case MESSAGE_TYPES.WORLDREPORT:\n            this.updateScene(data);\n            break;\n\n          case MESSAGE_TYPES.SOFTREPORT:\n            this.updateSoftbodies(data);\n            break;\n\n          case MESSAGE_TYPES.COLLISIONREPORT:\n            this.updateCollisions(data);\n            break;\n\n          case MESSAGE_TYPES.VEHICLEREPORT:\n            this.updateVehicles(data);\n            break;\n\n          case MESSAGE_TYPES.CONSTRAINTREPORT:\n            this.updateConstraints(data);\n            break;\n          default:\n        }\n      } else if (data.cmd) {\n        // non-transferable object\n        switch (data.cmd) {\n          case 'objectReady':\n            _temp = data.params;\n            if (this._objects[_temp]) this._objects[_temp].dispatchEvent('ready');\n            break;\n\n          case 'worldReady':\n            this.dispatchEvent('ready');\n            break;\n\n          case 'ammoLoaded':\n            this.dispatchEvent('loaded');\n            console.log(\"Physics loading time: \" + (performance.now() - start) + \"ms\");\n            break;\n\n          case 'vehicle':\n            window.test = data;\n            break;\n\n          default:\n            // Do nothing, just show the message\n            console.debug(`Received: ${data.cmd}`);\n            console.dir(data.params);\n            break;\n        }\n      } else {\n        switch (data[0]) {\n          case MESSAGE_TYPES.WORLDREPORT:\n            this.updateScene(data);\n            break;\n\n          case MESSAGE_TYPES.COLLISIONREPORT:\n            this.updateCollisions(data);\n            break;\n\n          case MESSAGE_TYPES.VEHICLEREPORT:\n            this.updateVehicles(data);\n            break;\n\n          case MESSAGE_TYPES.CONSTRAINTREPORT:\n            this.updateConstraints(data);\n            break;\n          default:\n        }\n      }\n    };\n  }\n\n  updateScene(info) {\n    let index = info[1];\n\n    while (index--) {\n      const offset = 2 + index * REPORT_ITEMSIZE;\n      const object = this._objects[info[offset]];\n      const component = object.component;\n      const data = component.use('physics').data;\n\n      if (object === null) continue;\n\n      if (component.__dirtyPosition === false) {\n        object.position.set(\n          info[offset + 1],\n          info[offset + 2],\n          info[offset + 3]\n        );\n\n        component.__dirtyPosition = false;\n      }\n\n      if (component.__dirtyRotation === false) {\n        object.quaternion.set(\n          info[offset + 4],\n          info[offset + 5],\n          info[offset + 6],\n          info[offset + 7]\n        );\n\n        component.__dirtyRotation = false;\n      }\n\n      data.linearVelocity.set(\n        info[offset + 8],\n        info[offset + 9],\n        info[offset + 10]\n      );\n\n      data.angularVelocity.set(\n        info[offset + 11],\n        info[offset + 12],\n        info[offset + 13]\n      );\n    }\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.worker.transferableMessage(info.buffer, [info.buffer]); // Give the typed array back to the worker\n\n    this._is_simulating = false;\n    this.dispatchEvent('update');\n  }\n\n  updateSoftbodies(data) {\n    let index = data[1],\n      offset = 2;\n\n    while (index--) {\n      const size = data[offset + 1];\n      const object = this._objects[data[offset]];\n\n      if (object === null) continue;\n\n      const _physijs = object.component._physijs;\n\n      const attributes = object.geometry.attributes;\n      const volumePositions = attributes.position.array;\n\n      const offsetVert = offset + 2;\n\n      if (!_physijs.isSoftBodyReset) {\n        object.position.set(0, 0, 0);\n        object.quaternion.set(0, 0, 0, 0);\n\n        _physijs.isSoftBodyReset = true;\n      }\n\n      if (_physijs.type === \"softTrimesh\") {\n        const volumeNormals = attributes.normal.array;\n\n        for (let i = 0; i < size; i++) {\n          const offs = offsetVert + i * 18;\n\n          const x1 = data[offs];\n          const y1 = data[offs + 1];\n          const z1 = data[offs + 2];\n\n          const nx1 = data[offs + 3];\n          const ny1 = data[offs + 4];\n          const nz1 = data[offs + 5];\n\n          const x2 = data[offs + 6];\n          const y2 = data[offs + 7];\n          const z2 = data[offs + 8];\n\n          const nx2 = data[offs + 9];\n          const ny2 = data[offs + 10];\n          const nz2 = data[offs + 11];\n\n          const x3 = data[offs + 12];\n          const y3 = data[offs + 13];\n          const z3 = data[offs + 14];\n\n          const nx3 = data[offs + 15];\n          const ny3 = data[offs + 16];\n          const nz3 = data[offs + 17];\n\n          const i9 = i * 9;\n\n          volumePositions[i9] = x1;\n          volumePositions[i9 + 1] = y1;\n          volumePositions[i9 + 2] = z1;\n\n          volumePositions[i9 + 3] = x2;\n          volumePositions[i9 + 4] = y2;\n          volumePositions[i9 + 5] = z2;\n\n          volumePositions[i9 + 6] = x3;\n          volumePositions[i9 + 7] = y3;\n          volumePositions[i9 + 8] = z3;\n\n          volumeNormals[i9] = nx1;\n          volumeNormals[i9 + 1] = ny1;\n          volumeNormals[i9 + 2] = nz1;\n\n          volumeNormals[i9 + 3] = nx2;\n          volumeNormals[i9 + 4] = ny2;\n          volumeNormals[i9 + 5] = nz2;\n\n          volumeNormals[i9 + 6] = nx3;\n          volumeNormals[i9 + 7] = ny3;\n          volumeNormals[i9 + 8] = nz3;\n        }\n\n        attributes.normal.needsUpdate = true;\n        offset += 2 + size * 18;\n      }\n      else if (_physijs.type === \"softRopeMesh\") {\n        for (let i = 0; i < size; i++) {\n          const offs = offsetVert + i * 3;\n\n          const x = data[offs];\n          const y = data[offs + 1];\n          const z = data[offs + 2];\n\n          volumePositions[i * 3] = x;\n          volumePositions[i * 3 + 1] = y;\n          volumePositions[i * 3 + 2] = z;\n        }\n\n        offset += 2 + size * 3;\n      } else {\n        const volumeNormals = attributes.normal.array;\n\n        for (let i = 0; i < size; i++) {\n          const offs = offsetVert + i * 6;\n\n          const x = data[offs];\n          const y = data[offs + 1];\n          const z = data[offs + 2];\n\n          const nx = data[offs + 3];\n          const ny = data[offs + 4];\n          const nz = data[offs + 5];\n\n          volumePositions[i * 3] = x;\n          volumePositions[i * 3 + 1] = y;\n          volumePositions[i * 3 + 2] = z;\n\n          // FIXME: Normals are pointed to look inside;\n          volumeNormals[i * 3] = nx;\n          volumeNormals[i * 3 + 1] = ny;\n          volumeNormals[i * 3 + 2] = nz;\n        }\n\n        attributes.normal.needsUpdate = true;\n        offset += 2 + size * 6;\n      }\n\n      attributes.position.needsUpdate = true;\n    }\n\n    // if (this.SUPPORT_TRANSFERABLE)\n    //   this.worker.transferableMessage(data.buffer, [data.buffer]); // Give the typed array back to the worker\n\n    this._is_simulating = false;\n  }\n\n  updateVehicles(data) {\n    let vehicle, wheel;\n\n    for (let i = 0; i < (data.length - 1) / VEHICLEREPORT_ITEMSIZE; i++) {\n      const offset = 1 + i * VEHICLEREPORT_ITEMSIZE;\n      vehicle = this._vehicles[data[offset]];\n\n      if (vehicle === null) continue;\n\n      wheel = vehicle.wheels[data[offset + 1]];\n\n      wheel.position.set(\n        data[offset + 2],\n        data[offset + 3],\n        data[offset + 4]\n      );\n\n      wheel.quaternion.set(\n        data[offset + 5],\n        data[offset + 6],\n        data[offset + 7],\n        data[offset + 8]\n      );\n    }\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.worker.transferableMessage(data.buffer, [data.buffer]); // Give the typed array back to the worker\n  }\n\n  updateConstraints(data) {\n    let constraint, object;\n\n    for (let i = 0; i < (data.length - 1) / CONSTRAINTREPORT_ITEMSIZE; i++) {\n      const offset = 1 + i * CONSTRAINTREPORT_ITEMSIZE;\n      constraint = this._constraints[data[offset]];\n      object = this._objects[data[offset + 1]];\n\n      if (constraint === undefined || object === undefined) continue;\n\n      temp1Vector3.set(\n        data[offset + 2],\n        data[offset + 3],\n        data[offset + 4]\n      );\n\n      temp1Matrix4.extractRotation(object.matrix);\n      temp1Vector3.applyMatrix4(temp1Matrix4);\n\n      constraint.positiona.addVectors(object.position, temp1Vector3);\n      constraint.appliedImpulse = data[offset + 5];\n    }\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.worker.transferableMessage(data.buffer, [data.buffer]); // Give the typed array back to the worker\n  }\n\n  updateCollisions(data) {\n    /**\n     * #TODO\n     * This is probably the worst way ever to handle collisions. The inherent evilness is a residual\n     * effect from the previous version's evilness which mutated when switching to transferable objects.\n     *\n     * If you feel inclined to make this better, please do so.\n     */\n\n    const collisions = {},\n      normal_offsets = {};\n\n    // Build collision manifest\n    for (let i = 0; i < data[1]; i++) {\n      const offset = 2 + i * COLLISIONREPORT_ITEMSIZE;\n      const object = data[offset];\n      const object2 = data[offset + 1];\n\n      normal_offsets[`${object}-${object2}`] = offset + 2;\n      normal_offsets[`${object2}-${object}`] = -1 * (offset + 2);\n\n      // Register collisions for both the object colliding and the object being collided with\n      if (!collisions[object]) collisions[object] = [];\n      collisions[object].push(object2);\n\n      if (!collisions[object2]) collisions[object2] = [];\n      collisions[object2].push(object);\n    }\n\n    // Deal with collisions\n    for (const id1 in this._objects) {\n      if (!this._objects.hasOwnProperty(id1)) continue;\n      const object = this._objects[id1];\n      const component = object.component;\n      const data = component.use('physics').data;\n\n      if (object === null) continue;\n\n      // If object touches anything, ...\n      if (collisions[id1]) {\n        // Clean up touches array\n        for (let j = 0; j < data.touches.length; j++) {\n          if (collisions[id1].indexOf(data.touches[j]) === -1)\n            data.touches.splice(j--, 1);\n        }\n\n        // Handle each colliding object\n        for (let j = 0; j < collisions[id1].length; j++) {\n          const id2 = collisions[id1][j];\n          const object2 = this._objects[id2];\n          const component2 = object2.component;\n          const data2 = component2.use('physics').data;\n\n          if (object2) {\n            // If object was not already touching object2, notify object\n            if (data.touches.indexOf(id2) === -1) {\n              data.touches.push(id2);\n\n              const vel = component.use('physics').getLinearVelocity();\n              const vel2 = component2.use('physics').getLinearVelocity();\n\n              temp1Vector3.subVectors(vel, vel2);\n              const temp1 = temp1Vector3.clone();\n              const temp2 = temp1Vector3.clone();\n\n              let normal_offset = normal_offsets[`${data.id}-${data2.id}`];\n\n              if (normal_offset > 0) {\n                temp1Vector3.set(\n                  -data[normal_offset],\n                  -data[normal_offset + 1],\n                  -data[normal_offset + 2]\n                );\n              } else {\n                normal_offset *= -1;\n\n                temp1Vector3.set(\n                  data[normal_offset],\n                  data[normal_offset + 1],\n                  data[normal_offset + 2]\n                );\n              }\n\n              component.emit('collision', object2, temp1, temp2, temp1Vector3);\n            }\n          }\n        }\n      } else data.touches.length = 0; // not touching other objects\n    }\n\n    this.collisions = collisions;\n\n    if (this.SUPPORT_TRANSFERABLE)\n      this.worker.transferableMessage(data.buffer, [data.buffer]); // Give the typed array back to the worker\n  }\n\n  addConstraint(constraint, show_marker) {\n    constraint.id = this.getObjectId();\n    this._constraints[constraint.id] = constraint;\n    constraint.worldModule = this;\n    this.execute('addConstraint', constraint.getDefinition());\n\n    if (show_marker) {\n      let marker;\n\n      switch (constraint.type) {\n        case 'point':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this._objects[constraint.objecta].add(marker);\n          break;\n\n        case 'hinge':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this._objects[constraint.objecta].add(marker);\n          break;\n\n        case 'slider':\n          marker = new Mesh(\n            new BoxGeometry(10, 1, 1),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n\n          // This rotation isn't right if all three axis are non-0 values\n          // TODO: change marker's rotation order to ZYX\n          marker.rotation.set(\n            constraint.axis.y, // yes, y and\n            constraint.axis.x, // x axis are swapped\n            constraint.axis.z\n          );\n          this._objects[constraint.objecta].add(marker);\n          break;\n\n        case 'conetwist':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this._objects[constraint.objecta].add(marker);\n          break;\n\n        case 'dof':\n          marker = new Mesh(\n            new SphereGeometry(1.5),\n            new MeshNormalMaterial()\n          );\n\n          marker.position.copy(constraint.positiona);\n          this._objects[constraint.objecta].add(marker);\n          break;\n        default:\n      }\n    }\n\n    return constraint;\n  }\n\n  onSimulationResume() {\n    this.execute('onSimulationResume', {});\n  }\n\n  removeConstraint(constraint) {\n    if (this._constraints[constraint.id] !== undefined) {\n      this.execute('removeConstraint', {id: constraint.id});\n      delete this._constraints[constraint.id];\n    }\n  }\n\n  execute(cmd, params) {\n    this.worker.postMessage({cmd, params});\n  }\n\n  onAddCallback(component) {\n    const object = component.native;\n    const data = object.component.use('physics').data;\n\n    if (data) {\n      component.manager.set('module:world', this);\n      data.id = this.getObjectId();\n\n      if (object instanceof Vehicle) {\n        this.onAddCallback(object.mesh);\n        this._vehicles[data.id] = object;\n        this.execute('addVehicle', data);\n      } else {\n        component.__dirtyPosition = false;\n        component.__dirtyRotation = false;\n        this._objects[data.id] = object;\n\n        if (object.children.length) {\n          data.children = [];\n          addObjectChildren(object, object);\n        }\n\n        if (object.material._physijs) {\n          if (this._materials_ref_counts.hasOwnProperty(object.material._physijs.id))\n            this._materials_ref_counts[object.material._physijs.id]++;\n          else {\n            this.execute('registerMaterial', object.material._physijs);\n            data.materialId = object.material._physijs.id;\n            this._materials_ref_counts[object.material._physijs.id] = 1;\n          }\n        }\n\n        // object.quaternion.setFromEuler(object.rotation);\n        //\n        // console.log(object.component);\n        // console.log(object.rotation);\n\n        // Object starting position + rotation\n        data.position = {\n          x: object.position.x,\n          y: object.position.y,\n          z: object.position.z\n        };\n\n        data.rotation = {\n          x: object.quaternion.x,\n          y: object.quaternion.y,\n          z: object.quaternion.z,\n          w: object.quaternion.w\n        };\n\n        if (data.width) data.width *= object.scale.x;\n        if (data.height) data.height *= object.scale.y;\n        if (data.depth) data.depth *= object.scale.z;\n\n        this.execute('addObject', data);\n      }\n\n      component.emit('physics:added');\n    }\n  }\n\n  onRemoveCallback(component) {\n    const object = component.native;\n\n    if (object instanceof Vehicle) {\n      this.execute('removeVehicle', {id: object._physijs.id});\n      while (object.wheels.length) this.remove(object.wheels.pop());\n\n      this.remove(object.mesh);\n      this._vehicles[object._physijs.id] = null;\n    } else {\n      // Mesh.prototype.remove.call(this, object);\n\n      if (object._physijs) {\n        component.manager.remove('module:world');\n        this._objects[object._physijs.id] = null;\n        this.execute('removeObject', {id: object._physijs.id});\n      }\n    }\n    if (object.material && object.material._physijs && this._materials_ref_counts.hasOwnProperty(object.material._physijs.id)) {\n      this._materials_ref_counts[object.material._physijs.id]--;\n\n      if (this._materials_ref_counts[object.material._physijs.id] === 0) {\n        this.execute('unRegisterMaterial', object.material._physijs);\n        this._materials_ref_counts[object.material._physijs.id] = null;\n      }\n    }\n  }\n\n  defer(func, args) {\n    return new Promise((resolve) => {\n      if (this.isLoaded) {\n        func(...args);\n        resolve();\n      } else this.loader.then(() => {\n        func(...args);\n        resolve();\n      });\n    });\n  }\n\n  manager(manager) {\n    manager.set('physicsWorker', this.worker);\n  }\n\n  bridge = {\n    onAdd(component, self) {\n      if (component.use('physics')) return self.defer(self.onAddCallback.bind(self), [component]);\n      return;\n    },\n\n    onRemove(component, self) {\n      if (component.use('physics')) return self.defer(self.onRemoveCallback.bind(self), [component]);\n      return;\n    }\n  };\n\n  integrate(self) {\n    const params = self.params;\n\n    // ...\n\n    this.setFixedTimeStep = function(fixedTimeStep) {\n      if (fixedTimeStep) self.execute('setFixedTimeStep', fixedTimeStep);\n    }\n\n    this.setGravity = function(gravity) {\n      if (gravity) self.execute('setGravity', gravity);\n    }\n\n    this.addConstraint = self.addConstraint.bind(self);\n\n    this.simulate = function(timeStep, maxSubSteps) {\n      if (self._stats) self._stats.begin();\n\n      if (self._is_simulating) return false;\n\n      self._is_simulating = true;\n\n      for (const object_id in self._objects) {\n        if (!self._objects.hasOwnProperty(object_id)) continue;\n\n        const object = self._objects[object_id];\n        const component = object.component;\n        const data = component.use('physics').data;\n\n        if (object !== null && (component.__dirtyPosition || component.__dirtyRotation)) {\n          const update = {id: data.id};\n\n          if (component.__dirtyPosition) {\n            update.pos = {\n              x: object.position.x,\n              y: object.position.y,\n              z: object.position.z\n            };\n\n            if (data.isSoftbody) object.position.set(0, 0, 0);\n\n            component.__dirtyPosition = false;\n          }\n\n          if (component.__dirtyRotation) {\n            update.quat = {\n              x: object.quaternion.x,\n              y: object.quaternion.y,\n              z: object.quaternion.z,\n              w: object.quaternion.w\n            };\n\n            if (data.isSoftbody) object.rotation.set(0, 0, 0);\n\n            component.__dirtyRotation = false;\n          }\n\n          self.execute('updateTransform', update);\n        }\n      }\n\n      self.execute('simulate', {timeStep, maxSubSteps});\n\n      if (self._stats) self._stats.end();\n      return true;\n    }\n\n    // const simulateProcess = (t) => {\n    //   window.requestAnimationFrame(simulateProcess);\n\n    //   this.simulate(1/60, 1); // delta, 1\n    // }\n\n    // simulateProcess();\n\n    self.loader.then(() => {\n      self.simulateLoop = new Loop((clock) => {\n        this.simulate(clock.getDelta(), 1); // delta, 1\n      });\n\n      self.simulateLoop.start(this);\n\n      this.setGravity(params.gravity);\n    });\n  }\n}\n","import {Quaternion} from 'three';\n\nexport const properties = {\n  position: {\n    get() {\n      return this._native.position;\n    },\n\n    set(vector3) {\n      const pos = this._native.position;\n      const scope = this;\n\n      Object.defineProperties(pos, {\n        x: {\n          get() {\n            return this._x;\n          },\n\n          set(x) {\n            scope.__dirtyPosition = true;\n            this._x = x;\n          }\n        },\n        y: {\n          get() {\n            return this._y;\n          },\n\n          set(y) {\n            scope.__dirtyPosition = true;\n            this._y = y;\n          }\n        },\n        z: {\n          get() {\n            return this._z;\n          },\n\n          set(z) {\n            scope.__dirtyPosition = true;\n            this._z = z;\n          }\n        }\n      });\n\n      scope.__dirtyPosition = true;\n\n      pos.copy(vector3);\n    }\n  },\n\n  quaternion: {\n    get() {\n      this.__c_rot = true;\n      return this.native.quaternion;\n    },\n\n    set(quaternion) {\n      const quat = this._native.quaternion,\n        native = this._native;\n\n      quat.copy(quaternion);\n\n      quat.onChange(() => {\n        if (this.__c_rot) {\n          if (native.__dirtyRotation === true) {\n            this.__c_rot = false;\n            native.__dirtyRotation = false;\n          }\n          native.__dirtyRotation = true;\n        }\n      });\n    }\n  },\n\n  rotation: {\n    get() {\n      this.__c_rot = true;\n      return this._native.rotation;\n    },\n\n    set(euler) {\n      const rot = this._native.rotation,\n        native = this._native;\n\n      this.quaternion.copy(new Quaternion().setFromEuler(euler));\n\n      rot.onChange(() => {\n        if (this.__c_rot) {\n          this.quaternion.copy(new Quaternion().setFromEuler(rot));\n          native.__dirtyRotation = true;\n        }\n      });\n    }\n  }\n}\n\nexport function wrapPhysicsPrototype(scope) {\n  for (let key in properties) {\n    Object.defineProperty(scope, key, {\n      get: properties[key].get.bind(scope),\n      set: properties[key].set.bind(scope),\n      configurable: true,\n      enumerable: true\n    });\n  }\n}\n\nexport function onCopy(source) {\n  wrapPhysicsPrototype(this);\n  this._physijs = {...source._physijs};\n  this.position = this.position.clone();\n  this.rotation = this.rotation.clone();\n  this.quaternion = this.quaternion.clone();\n}\n\nexport function onWrap() {\n  this.position = this.position.clone();\n  this.rotation = this.rotation.clone();\n  this.quaternion = this.quaternion.clone();\n}\n","import {Vector3} from 'three';\nimport {wrapPhysicsPrototype, onCopy, onWrap} from './physicsPrototype';\n\nclass API {\n  applyCentralImpulse(force) {\n    this.execute('applyCentralImpulse', {id: this.data.id, x: force.x, y: force.y, z: force.z});\n  }\n\n  applyImpulse(force, offset) {\n    this.execute('applyImpulse', {\n      id: this.data.id,\n      impulse_x: force.x,\n      impulse_y: force.y,\n      impulse_z: force.z,\n      x: offset.x,\n      y: offset.y,\n      z: offset.z\n    });\n  }\n\n  applyTorque(force) {\n    this.execute('applyTorque', {\n      id: this.data.id,\n      torque_x: force.x,\n      torque_y: force.y,\n      torque_z: force.z\n    });\n  }\n\n  applyCentralForce(force) {\n    this.execute('applyCentralForce', {\n      id: this.data.id,\n      x: force.x,\n      y: force.y,\n      z: force.z\n    });\n  }\n\n  applyForce(force, offset) {\n    this.execute('applyForce', {\n      id: this.data.id,\n      force_x: force.x,\n      force_y: force.y,\n      force_z: force.z,\n      x: offset.x,\n      y: offset.y,\n      z: offset.z\n    });\n  }\n\n  getAngularVelocity() {\n    return this.data.angularVelocity;\n  }\n\n  setAngularVelocity(velocity) {\n    this.execute(\n      'setAngularVelocity',\n      {id: this.data.id, x: velocity.x, y: velocity.y, z: velocity.z}\n    );\n  }\n\n  getLinearVelocity() {\n    return this.data.linearVelocity;\n  }\n\n  setLinearVelocity(velocity) {\n    this.execute(\n      'setLinearVelocity',\n      {id: this.data.id, x: velocity.x, y: velocity.y, z: velocity.z}\n    );\n  }\n\n  setAngularFactor(factor) {\n    this.execute(\n      'setAngularFactor',\n      {id: this.data.id, x: factor.x, y: factor.y, z: factor.z}\n    );\n  }\n\n  setLinearFactor(factor) {\n    this.execute(\n      'setLinearFactor',\n      {id: this.data.id, x: factor.x, y: factor.y, z: factor.z}\n    );\n  }\n\n  setDamping(linear, angular) {\n    this.execute(\n      'setDamping',\n      {id: this.data.id, linear, angular}\n    );\n  }\n\n  setCcdMotionThreshold(threshold) {\n    this.execute(\n      'setCcdMotionThreshold',\n      {id: this.data.id, threshold}\n    );\n  }\n\n  setCcdSweptSphereRadius(radius) {\n    this.execute('setCcdSweptSphereRadius', {id: this.data.id, radius});\n  }\n}\n\nexport default class extends API {\n  static rigidbody = () => ({\n    touches: [],\n    linearVelocity: new Vector3(),\n    angularVelocity: new Vector3(),\n    mass: 10,\n    scale: new Vector3(1, 1, 1),\n    restitution: 0.3,\n    friction: 0.8,\n    damping: 0,\n    margin: 0\n  });\n\n  constructor(defaults, data) {\n    super();\n    this.data = Object.assign(defaults, data);\n  }\n\n  integrate(self) {\n    wrapPhysicsPrototype(this);\n  }\n\n  manager(manager) {\n    manager.define('physics');\n\n    this.execute = (...data) => {\n      return manager.has('module:world')\n      ? manager.get('module:world').execute(...data)\n      : () => {};\n    };\n  }\n\n  updateData(callback) {\n    this.bridge.geometry = function (geometry, module) {\n      if (callback) callback(geometry, module);\n      return geometry;\n    }\n  }\n\n  bridge = {\n    onCopy,\n    onWrap\n  };\n}\n","import PhysicsModule from './PhysicsModule';\n\nexport class BoxModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'box',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    });\n  }\n}\n","import PhysicsModule from './PhysicsModule';\n\nexport class CompoundModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'compound',\n      ...PhysicsModule.rigidbody()\n    }, params);\n  }\n}\n","import PhysicsModule from './PhysicsModule';\n\n// TODO: Test CapsuleModule in action.\nexport class CapsuleModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'capsule',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n    });\n  }\n}\n","import PhysicsModule from './PhysicsModule';\n\nexport class ConcaveModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'concave',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      data.data = this.geometryProcessor(geometry);\n    });\n  }\n\n  geometryProcessor(geometry) {\n    const isBuffer = geometry.type === 'BufferGeometry';\n\n    if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n    const data = isBuffer ?\n      geometry.attributes.position.array :\n      new Float32Array(geometry.faces.length * 9);\n\n    if (!isBuffer) {\n      const vertices = geometry.vertices;\n\n      for (let i = 0; i < geometry.faces.length; i++) {\n        const face = geometry.faces[i];\n\n        const vA = vertices[face.a];\n        const vB = vertices[face.b];\n        const vC = vertices[face.c];\n\n        const i9 = i * 9;\n\n        data[i9] = vA.x;\n        data[i9 + 1] = vA.y;\n        data[i9 + 2] = vA.z;\n\n        data[i9 + 3] = vB.x;\n        data[i9 + 4] = vB.y;\n        data[i9 + 5] = vB.z;\n\n        data[i9 + 6] = vC.x;\n        data[i9 + 7] = vC.y;\n        data[i9 + 8] = vC.z;\n      }\n    }\n\n    return data;\n  };\n}\n","import {Vector3} from 'three';\nimport {wrapPhysicsPrototype, onCopy, onWrap} from './physicsPrototype';\n\nexport class ConeModule {\n  constructor(params) {\n    this.params = Object.assign({\n      mass: 10,\n      scale: new Vector3(1, 1, 1),\n      restitution: 0.3,\n      friction: 0.8,\n      damping: 0,\n      margin: 0\n    }, params);\n  }\n\n  integrate(self) {\n    const params = self.params;\n\n    this._physijs = {\n      type: 'cone',\n      mass: params.mass,\n      touches: [],\n      linearVelocity: new Vector3(),\n      angularVelocity: new Vector3(),\n      group: params.group,\n      mask: params.mask,\n      friction: params.friction,\n      restitution: params.restitution,\n      damping: params.damping,\n      scale: params.scale,\n      margin: params.margin,\n    };\n\n    wrapPhysicsPrototype(this);\n  }\n\n  bridge = {\n    geometry(geometry) {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      this._physijs.radius = (geometry.boundingBox.max.x - geometry.boundingBox.min.x) / 2;\n      this._physijs.height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\n      return geometry;\n    },\n\n    onCopy,\n    onWrap\n  };\n}\n","import {Vector3, BufferGeometry} from 'three';\nimport {wrapPhysicsPrototype, onCopy, onWrap} from './physicsPrototype';\n\nexport class ConvexModule {\n  constructor(params) {\n    this.params = Object.assign({\n      mass: 10,\n      restitution: 0.3,\n      friction: 0.8,\n      damping: 0,\n      margin: 0,\n      scale: new Vector3(1, 1, 1)\n    }, params);\n  }\n\n  integrate(self) {\n    const params = self.params;\n\n    this._physijs = {\n      type: 'convex',\n      mass: params.mass,\n      touches: [],\n      linearVelocity: new Vector3(),\n      angularVelocity: new Vector3(),\n      group: params.group,\n      mask: params.mask,\n      friction: params.friction,\n      restitution: params.restitution,\n      damping: params.damping,\n      margin: params.margin,\n      scale: params.scale\n    };\n\n    wrapPhysicsPrototype(this);\n  }\n\n  bridge = {\n    mesh(mesh) {\n      const geometry = mesh.geometry;\n\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      const isBuffer = geometry.type === 'BufferGeometry';\n\n      if (!isBuffer) geometry._bufferGeometry = new BufferGeometry().fromGeometry(geometry);\n\n      const data = isBuffer ?\n        geometry.attributes.position.array :\n        geometry._bufferGeometry.attributes.position.array;\n\n      this._physijs.data = data;\n\n      return mesh;\n    },\n\n    onCopy,\n    onWrap\n  }\n}\n","import {Vector3} from 'three';\nimport {wrapPhysicsPrototype, onCopy, onWrap} from './physicsPrototype';\n\nexport class CylinderModule {\n  constructor(params) {\n    this.params = Object.assign({\n      mass: 10,\n      restitution: 0.3,\n      friction: 0.8,\n      damping: 0,\n      margin: 0,\n      scale: new Vector3(1, 1, 1)\n    }, params);\n  }\n\n  integrate(self) {\n    const params = self.params;\n\n    this._physijs = {\n      type: 'cylinder',\n      width: params.width,\n      height: params.height,\n      depth: params.depth,\n      touches: [],\n      linearVelocity: new Vector3(),\n      angularVelocity: new Vector3(),\n      group: params.group,\n      mask: params.mask,\n      friction: params.friction,\n      restitution: params.restitution,\n      damping: params.damping,\n      margin: params.margin,\n      mass: params.mass,\n      scale: params.scale\n    };\n\n    wrapPhysicsPrototype(this);\n  }\n\n  bridge = {\n    geometry(geometry) {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      this._physijs.width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      this._physijs.height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      this._physijs.depth = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n      return geometry;\n    },\n\n    onCopy,\n    onWrap\n  }\n}\n","import {Vector2, Vector3, BufferGeometry} from 'three';\nimport {wrapPhysicsPrototype, onCopy, onWrap} from './physicsPrototype';\n\nexport class HeightfieldModule {\n  constructor(params) {\n    this.params = Object.assign({\n      mass: 10,\n      scale: new Vector3(1, 1, 1),\n      size: new Vector2(1, 1),\n      restitution: 0.3,\n      friction: 0.8,\n      damping: 0,\n      margin: 0,\n      autoAlign: false\n    }, params);\n  }\n\n  integrate(self) {\n    const params = self.params;\n\n    this._physijs = {\n      type: 'heightfield',\n      friction: params.friction,\n      touches: [],\n      scale: params.scale,\n      restitution: params.restitution,\n      damping: params.damping,\n      margin: params.margin,\n      points: params.points,\n      mass: params.mass,\n      linearVelocity: new Vector3(),\n      angularVelocity: new Vector3(),\n      group: params.group,\n      mask: params.mask,\n    };\n\n    wrapPhysicsPrototype(this);\n  }\n\n  bridge = {\n    geometry(geometry, self) {\n      const isBuffer = geometry instanceof BufferGeometry;\n      const verts = isBuffer ? geometry.attributes.position.array : geometry.vertices;\n\n      let size = isBuffer ? verts.length / 3 : verts.length;\n\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      const xdiv = self.params.size.x;\n      const ydiv = self.params.size.y;\n\n      const xsize = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      const ysize = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n      this._physijs.xpts = (typeof xdiv === 'undefined') ? Math.sqrt(size) : xdiv + 1;\n      this._physijs.ypts = (typeof ydiv === 'undefined') ? Math.sqrt(size) : ydiv + 1;\n\n      // note - this assumes our plane geometry is square, unless we pass in specific xdiv and ydiv\n      this._physijs.absMaxHeight = Math.max(geometry.boundingBox.max.y, Math.abs(geometry.boundingBox.min.y));\n\n      const points = new Float32Array(size),\n        xpts = this._physijs.xpts,\n        ypts = this._physijs.ypts;\n\n      while (size--) {\n        const vNum = size % xpts + ((ypts - Math.round((size / xpts) - ((size % xpts) / xpts)) - 1) * ypts);\n\n        if (isBuffer) points[size] = verts[vNum * 3 + 1];\n        else points[size] = verts[vNum].y;\n      }\n\n      this._physijs.points = points;\n\n      this._physijs.scale.multiply(\n        new THREE.Vector3(xsize / (xpts - 1), 1, ysize / (ypts - 1))\n      );\n\n      if (self.params.autoAlign) geometry.translate(xsize / -2, 0, ysize / -2);\n\n      return geometry;\n    },\n\n    onCopy,\n    onWrap\n  };\n}\n","import PhysicsModule from './PhysicsModule';\n\nexport class PlaneModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'plane',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingBox) geometry.computeBoundingBox();\n\n      data.width = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      data.height = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      data.normal = geometry.faces[0].normal.clone();\n    });\n  }\n}\n","import PhysicsModule from './PhysicsModule';\n\nexport class SphereModule extends PhysicsModule {\n  constructor(params) {\n    super({\n      type: 'sphere',\n      ...PhysicsModule.rigidbody()\n    }, params);\n\n    this.updateData((geometry, {data}) => {\n      if (!geometry.boundingSphere) geometry.computeBoundingSphere();\n      data.radius = geometry.boundingSphere.radius;\n    });\n  }\n}\n","import {Vector3, BufferGeometry, BufferAttribute} from 'three';\nimport {wrapPhysicsPrototype, onCopy, onWrap} from './physicsPrototype';\n\nexport class SoftbodyModule{\n  constructor(params) {\n    this.params = Object.assign({\n      restitution: 0.3,\n      friction: 0.8,\n      damping: 0,\n      scale: new Vector3(1, 1, 1),\n      pressure: 100,\n      margin: 0,\n      klst: 0.9,\n      kvst: 0.9,\n      kast: 0.9,\n      piterations: 1,\n      viterations: 0,\n      diterations: 0,\n      citerations: 4,\n      anchorHardness: 0.7,\n      rigidHardness: 1\n    }, params);\n  }\n\n  appendAnchor(object, node, influence, collisionBetweenLinkedBodies = true) {\n    const o1 = this._physijs.id;\n    const o2 = object._physijs.id;\n\n    if (this.manager.has('module:world')) this.manager.get('module:world').execute('appendAnchor', {\n      obj: o1,\n      obj2: o2,\n      node,\n      influence,\n      collisionBetweenLinkedBodies\n    });\n  }\n\n  integrate(self) {\n    const params = self.params;\n\n    this._physijs = {\n      type: 'softTrimesh',\n      mass: params.mass,\n      scale: params.scale,\n      touches: [],\n      friction: params.friction,\n      damping: params.damping,\n      pressure: params.pressure,\n      margin: params.margin,\n      klst: params.klst,\n      isSoftbody: true,\n      kast: params.kast,\n      kvst: params.kvst,\n      drag: params.drag,\n      lift: params.lift,\n      piterations: params.piterations,\n      viterations: params.viterations,\n      diterations: params.diterations,\n      citerations: params.citerations,\n      anchorHardness: params.anchorHardness,\n      rigidHardness: params.rigidHardness\n    };\n\n    this.appendAnchor = self.appendAnchor.bind(this);\n\n    wrapPhysicsPrototype(this);\n  }\n\n  bridge = {\n    geometry(geometry, self) {\n      const idxGeometry = geometry instanceof BufferGeometry\n        ? geometry\n        : (() => {\n          geometry.mergeVertices();\n\n          const bufferGeometry = new BufferGeometry();\n\n          bufferGeometry.addAttribute(\n            'position',\n            new BufferAttribute(\n              new Float32Array(geometry.vertices.length * 3),\n              3\n            ).copyVector3sArray(geometry.vertices)\n          );\n\n          bufferGeometry.setIndex(\n            new BufferAttribute(\n              new (geometry.faces.length * 3 > 65535 ? Uint32Array : Uint16Array)(geometry.faces.length * 3),\n              1\n            ).copyIndicesArray(geometry.faces)\n          );\n\n          return bufferGeometry;\n        })();\n\n      const aVertices = idxGeometry.attributes.position.array;\n      const aIndices = idxGeometry.index.array;\n\n      this._physijs.aVertices = aVertices;\n      this._physijs.aIndices = aIndices;\n\n      const ndxGeometry = new BufferGeometry().fromGeometry(geometry);\n\n      return ndxGeometry;\n    },\n\n    onCopy,\n    onWrap\n  }\n}\n","import {Vector3, BufferGeometry, BufferAttribute} from 'three';\nimport {wrapPhysicsPrototype, onCopy, onWrap} from './physicsPrototype';\n\nexport class ClothModule {\n  constructor(params = {}) {\n    this.params = Object.assign({\n      friction: 0.8,\n      damping: 0,\n      margin: 0,\n      scale: new Vector3(1, 1, 1),\n      klst: 0.9,\n      kvst: 0.9,\n      kast: 0.9,\n      piterations: 1,\n      viterations: 0,\n      diterations: 0,\n      citerations: 4,\n      anchorHardness: 0.7,\n      rigidHardness: 1\n    }, params);\n  }\n\n  appendAnchor(object, node, influence, collisionBetweenLinkedBodies = true) {\n    const o1 = this._physijs.id;\n    const o2 = object._physijs.id;\n\n    if (this.manager.has('module:world')) this.manager.get('module:world').execute('appendAnchor', {\n      obj: o1,\n      obj2: o2,\n      node,\n      influence,\n      collisionBetweenLinkedBodies\n    });\n  }\n\n  integrate(self) {\n    const params = self.params;\n\n    this._physijs = {\n      type: 'softClothMesh',\n      mass: params.mass,\n      touches: [],\n      isSoftbody: true,\n      scale: params.scale,\n      friction: params.friction,\n      damping: params.damping,\n      margin: params.margin,\n      klst: params.klst,\n      kast: params.kast,\n      kvst: params.kvst,\n      drag: params.drag,\n      lift: params.lift,\n      piterations: params.piterations,\n      viterations: params.viterations,\n      diterations: params.diterations,\n      citerations: params.citerations,\n      anchorHardness: params.anchorHardness,\n      rigidHardness: params.rigidHardness,\n      scale: params.scale\n    };\n\n    this.appendAnchor = self.appendAnchor.bind(this);\n\n    wrapPhysicsPrototype(this);\n  }\n\n  bridge = {\n    geometry(geometry, self) {\n      const geomParams = geometry.parameters;\n\n      const geom = geometry instanceof BufferGeometry\n        ? geometry\n          : (() => {\n          geometry.mergeVertices();\n\n          const bufferGeometry = new BufferGeometry();\n\n          bufferGeometry.addAttribute(\n            'position',\n            new BufferAttribute(\n              new Float32Array(geometry.vertices.length * 3),\n              3\n            ).copyVector3sArray(geometry.vertices)\n          );\n\n          const faces = geometry.faces, facesLength = faces.length;\n          const normalsArray = new Float32Array(facesLength * 3);\n\n          for (let i = 0; i < facesLength; i++) {\n            const i3 = i * 3;\n            const normal = faces[i].normal || new Vector3();\n\n            normalsArray[i3] = normal.x;\n            normalsArray[i3 + 1] = normal.y;\n            normalsArray[i3 + 2] = normal.z;\n          }\n\n          bufferGeometry.addAttribute(\n            'normal',\n            new BufferAttribute(\n              normalsArray,\n              3\n            )\n          );\n\n          bufferGeometry.setIndex(\n            new BufferAttribute(\n              new (facesLength * 3 > 65535 ? Uint32Array : Uint16Array)(facesLength * 3),\n              1\n            ).copyIndicesArray(faces)\n          );\n\n          return bufferGeometry;\n        })();\n\n      const verts = geom.attributes.position.array;\n\n      if (!geomParams.widthSegments) geomParams.widthSegments = 1;\n      if (!geomParams.heightSegments) geomParams.heightSegments = 1;\n\n      const idx00 = 0;\n      const idx01 = geomParams.widthSegments;\n      const idx10 = (geomParams.heightSegments + 1) * (geomParams.widthSegments + 1) - (geomParams.widthSegments + 1);\n      const idx11 = verts.length / 3 - 1;\n\n      this._physijs.corners = [\n        verts[idx01 * 3], verts[idx01 * 3 + 1], verts[idx01 * 3 + 2], //   ╗\n        verts[idx00 * 3], verts[idx00 * 3 + 1], verts[idx00 * 3 + 2], // ╔\n        verts[idx11 * 3], verts[idx11 * 3 + 1], verts[idx11 * 3 + 2], //       ╝\n        verts[idx10 * 3], verts[idx10 * 3 + 1], verts[idx10 * 3 + 2], //     ╚\n      ];\n\n      this._physijs.segments = [geomParams.widthSegments + 1, geomParams.heightSegments + 1];\n\n      return geom;\n    },\n    onCopy,\n    onWrap\n  }\n};\n","import {Vector3, BufferGeometry, BufferAttribute} from 'three';\nimport {wrapPhysicsPrototype, onCopy, onWrap} from './physicsPrototype';\n\nexport class RopeModule {\n  constructor(params) {\n    this.params = Object.assign({\n      friction: 0.8,\n      damping: 0,\n      margin: 0,\n      klst: 0.9,\n      kvst: 0.9,\n      kast: 0.9,\n      piterations: 1,\n      viterations: 0,\n      diterations: 0,\n      citerations: 4,\n      anchorHardness: 0.7,\n      rigidHardness: 1\n    }, params);\n  }\n\n  appendAnchor(object, node, influence, collisionBetweenLinkedBodies = true) {\n    const o1 = this._physijs.id;\n    const o2 = object._physijs.id;\n\n    if (this.manager.has('module:world')) this.manager.get('module:world').execute('appendAnchor', {\n      obj: o1,\n      obj2: o2,\n      node,\n      influence,\n      collisionBetweenLinkedBodies\n    });\n  }\n\n  integrate(self) {\n    const params = self.params;\n\n    this._physijs = {\n      type: 'softRopeMesh',\n      mass: params.mass,\n      touches: [],\n      friction: params.friction,\n      damping: params.damping,\n      margin: params.margin,\n      klst: params.klst,\n      isSoftbody: true,\n      kast: params.kast,\n      kvst: params.kvst,\n      drag: params.drag,\n      lift: params.lift,\n      piterations: params.piterations,\n      viterations: params.viterations,\n      diterations: params.diterations,\n      citerations: params.citerations,\n      anchorHardness: params.anchorHardness,\n      rigidHardness: params.rigidHardness\n    };\n\n    this.appendAnchor = self.appendAnchor.bind(this);\n\n    wrapPhysicsPrototype(this);\n  }\n\n  bridge = {\n    geometry(geometry) {\n      if (!(geometry instanceof BufferGeometry)) {\n        geometry = (() => {\n          const buff = new BufferGeometry();\n\n          buff.addAttribute(\n            'position',\n            new BufferAttribute(\n              new Float32Array(geometry.vertices.length * 3),\n              3\n            ).copyVector3sArray(geometry.vertices)\n          );\n\n          return buff;\n        })();\n      }\n\n      const length = geometry.attributes.position.array.length / 3;\n      const vert = n => new Vector3().fromArray(geometry.attributes.position.array, n*3);\n\n      const v1 = vert(0);\n      const v2 = vert(length - 1);\n\n      this._physijs.data = [\n        v1.x, v1.y, v1.z,\n        v2.x, v2.y, v2.z,\n        length\n      ];\n\n      return geometry;\n    },\n\n    onCopy,\n    onWrap\n  }\n}\n","import {Loop} from 'whs';\n\nimport {\n  Object3D,\n  Quaternion,\n  Vector3,\n  Euler\n} from 'three';\n\nconst PI_2 = Math.PI / 2;\n\nfunction FirstPersonControlsSolver(camera, mesh, params) {\n  const velocityFactor = 1;\n  let runVelocity = 0.25;\n\n  mesh.setAngularFactor({x: 0, y: 0, z: 0});\n  camera.position.set(0, 0, 0);\n\n  /* Init */\n  const player = mesh,\n    pitchObject = new Object3D();\n\n  pitchObject.add(camera.native);\n\n  const yawObject = new Object3D();\n\n  yawObject.position.y = params.ypos; // eyes are 2 meters above the ground\n  yawObject.add(pitchObject);\n\n  const quat = new Quaternion();\n\n  let canJump = false,\n    // Moves.\n    moveForward = false,\n    moveBackward = false,\n    moveLeft = false,\n    moveRight = false;\n\n  player.on('collision', (otherObject, v, r, contactNormal) => {\n    if (contactNormal.y < 0.5) // Use a \"good\" threshold value between 0 and 1 here!\n      canJump = true;\n  });\n\n  const onMouseMove = event => {\n    if (this.enabled === false) return;\n\n    const movementX = typeof event.movementX === 'number'\n      ? event.movementX : typeof event.mozMovementX === 'number'\n        ? event.mozMovementX : typeof event.getMovementX === 'function'\n          ? event.getMovementX() : 0;\n    const movementY = typeof event.movementY === 'number'\n      ? event.movementY : typeof event.mozMovementY === 'number'\n        ? event.mozMovementY : typeof event.getMovementY === 'function'\n          ? event.getMovementY() : 0;\n\n    yawObject.rotation.y -= movementX * 0.002;\n    pitchObject.rotation.x -= movementY * 0.002;\n\n    pitchObject.rotation.x = Math.max(-PI_2, Math.min(PI_2, pitchObject.rotation.x));\n  };\n\n  const onKeyDown = event => {\n    switch (event.keyCode) {\n      case 38: // up\n      case 87: // w\n        moveForward = true;\n        break;\n\n      case 37: // left\n      case 65: // a\n        moveLeft = true;\n        break;\n\n      case 40: // down\n      case 83: // s\n        moveBackward = true;\n        break;\n\n      case 39: // right\n      case 68: // d\n        moveRight = true;\n        break;\n\n      case 32: // space\n        if (canJump === true) player.applyCentralImpulse({x: 0, y: 300, z: 0});\n        canJump = false;\n        break;\n\n      case 16: // shift\n        runVelocity = 0.5;\n        break;\n\n      default:\n    }\n  };\n\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 38: // up\n      case 87: // w\n        moveForward = false;\n        break;\n\n      case 37: // left\n      case 65: // a\n        moveLeft = false;\n        break;\n\n      case 40: // down\n      case 83: // a\n        moveBackward = false;\n        break;\n\n      case 39: // right\n      case 68: // d\n        moveRight = false;\n        break;\n\n      case 16: // shift\n        runVelocity = 0.25;\n        break;\n\n      default:\n    }\n  };\n\n  document.body.addEventListener('mousemove', onMouseMove, false);\n  document.body.addEventListener('keydown', onKeyDown, false);\n  document.body.addEventListener('keyup', onKeyUp, false);\n\n  this.enabled = false;\n  this.getObject = () => yawObject;\n\n  this.getDirection = targetVec => {\n    targetVec.set(0, 0, -1);\n    quat.multiplyVector3(targetVec);\n  };\n\n  // Moves the camera to the Physi.js object position\n  // and adds velocity to the object if the run key is down.\n  const inputVelocity = new Vector3(),\n    euler = new Euler();\n\n  this.update = delta => {\n    if (this.enabled === false) return;\n\n    delta = delta || 0.5;\n    delta = Math.min(delta, 0.5, delta);\n\n    inputVelocity.set(0, 0, 0);\n\n    const speed = velocityFactor * delta * params.speed * runVelocity;\n\n    if (moveForward) inputVelocity.z = -speed;\n    if (moveBackward) inputVelocity.z = speed;\n    if (moveLeft) inputVelocity.x = -speed;\n    if (moveRight) inputVelocity.x = speed;\n\n    // Convert velocity to world coordinates\n    euler.x = pitchObject.rotation.x;\n    euler.y = yawObject.rotation.y;\n    euler.order = 'XYZ';\n\n    quat.setFromEuler(euler);\n\n    inputVelocity.applyQuaternion(quat);\n\n    player.applyCentralImpulse({x: inputVelocity.x, y: 0, z: inputVelocity.z});\n    player.setAngularVelocity({x: inputVelocity.z, y: 0, z: -inputVelocity.x});\n    player.setAngularFactor({x: 0, y: 0, z: 0});\n  };\n\n  player.on('physics:added', () => {\n    player.manager.get('module:world').addEventListener('update', () => {\n      if (this.enabled === false) return;\n      yawObject.position.copy(player.position);\n    });\n  });\n}\n\nexport class FirstPersonModule {\n  static defaults = {\n    block: null,\n    speed: 1,\n    ypos: 1\n  };\n\n  constructor(object, params = {}) {\n    this.object = object;\n    this.params = params;\n\n    if (!this.params.block) {\n      this.params.block = document.getElementById('blocker');\n    }\n  }\n\n  manager(manager) {\n    this.controls = new FirstPersonControlsSolver(manager.get('camera'), this.object, this.params);\n\n    if ('pointerLockElement' in document\n      || 'mozPointerLockElement' in document\n      || 'webkitPointerLockElement' in document) {\n      const element = document.body;\n\n      const pointerlockchange = () => {\n        if (document.pointerLockElement === element\n          || document.mozPointerLockElement === element\n          || document.webkitPointerLockElement === element) {\n          this.controls.enabled = true;\n          this.params.block.style.display = 'none';\n        } else {\n          this.controls.enabled = false;\n          this.params.block.style.display = 'block';\n        }\n      };\n\n      document.addEventListener('pointerlockchange', pointerlockchange, false);\n      document.addEventListener('mozpointerlockchange', pointerlockchange, false);\n      document.addEventListener('webkitpointerlockchange', pointerlockchange, false);\n\n      const pointerlockerror = function () {\n        console.warn('Pointer lock error.');\n      };\n\n      document.addEventListener('pointerlockerror', pointerlockerror, false);\n      document.addEventListener('mozpointerlockerror', pointerlockerror, false);\n      document.addEventListener('webkitpointerlockerror', pointerlockerror, false);\n\n      document.querySelector('body').addEventListener('click', () => {\n        element.requestPointerLock = element.requestPointerLock\n          || element.mozRequestPointerLock\n          || element.webkitRequestPointerLock;\n\n        element.requestFullscreen = element.requestFullscreen\n          || element.mozRequestFullscreen\n          || element.mozRequestFullScreen\n          || element.webkitRequestFullscreen;\n\n        if (/Firefox/i.test(navigator.userAgent)) {\n          const fullscreenchange = () => {\n            if (document.fullscreenElement === element\n              || document.mozFullscreenElement === element\n              || document.mozFullScreenElement === element) {\n              document.removeEventListener('fullscreenchange', fullscreenchange);\n              document.removeEventListener('mozfullscreenchange', fullscreenchange);\n\n              element.requestPointerLock();\n            }\n          };\n\n          document.addEventListener('fullscreenchange', fullscreenchange, false);\n          document.addEventListener('mozfullscreenchange', fullscreenchange, false);\n\n          element.requestFullscreen();\n        } else element.requestPointerLock();\n      });\n    } else console.warn('Your browser does not support the PointerLock WHS.API.');\n\n    manager.get('scene').add(this.controls.getObject());\n  }\n\n  integrate(self) {\n    const updateProcessor = c => {\n      self.controls.update(c.getDelta());\n    };\n\n    self.updateLoop = new Loop(updateProcessor).start(this);\n  }\n}\n"],"names":["MESSAGE_TYPES","REPORT_ITEMSIZE","COLLISIONREPORT_ITEMSIZE","VEHICLEREPORT_ITEMSIZE","CONSTRAINTREPORT_ITEMSIZE","temp1Vector3","Vector3","temp2Vector3","temp1Matrix4","Matrix4","temp1Quat","Quaternion","getEulerXYZFromQuaternion","x","y","z","w","Math","atan2","asin","getQuatertionFromEuler","c1","cos","s1","sin","c2","s2","c3","s3","c1c2","s1s2","convertWorldPositionToObject","position","object","identity","makeRotationFromQuaternion","quaternion","getInverse","copy","sub","applyMatrix4","addObjectChildren","parent","i","children","length","child","physics","component","use","data","updateMatrix","updateMatrixWorld","setFromMatrixPosition","matrixWorld","setFromRotationMatrix","position_offset","rotation","push","Eventable","_eventListeners","event_name","callback","hasOwnProperty","index","indexOf","splice","parameters","Array","prototype","call","arguments","apply","obj","addEventListener","removeEventListener","dispatchEvent","ConeTwistConstraint","obja","objb","objecta","objectb","undefined","console","error","type","appliedImpulse","worldModule","_physijs","id","positiona","clone","positionb","axisa","axisb","execute","constraint","max_impulse","target","THREE","setFromEuler","Euler","HingeConstraint","axis","low","high","bias_factor","relaxation_factor","velocity","acceleration","PointConstraint","SliderConstraint","lin_lower","lin_upper","ang_lower","ang_upper","linear","angular","scene","DOFConstraint","limit","which","low_angle","high_angle","max_force","Vehicle","mesh","tuning","VehicleTuning","wheels","getObjectId","suspension_stiffness","suspension_compression","suspension_damping","max_suspension_travel","friction_slip","max_suspension_force","wheel_geometry","wheel_material","connection_point","wheel_direction","wheel_axle","suspension_rest_length","wheel_radius","is_front_wheel","wheel","Mesh","castShadow","receiveShadow","multiplyScalar","add","world","amount","steering","brake","force","TARGET","Symbol","SCRIPT_TYPE","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","Worker","shimWorker","filename","fn","ShimWorker","forceFallback","o","source","toString","replace","slice","objURL","createSourceObject","revokeObjectURL","selfShim","m","onmessage","postMessage","isThisThread","testWorker","testArray","Uint8Array","test","navigator","userAgent","Error","buffer","e","terminate","str","createObjectURL","Blob","blob","append","getBlob","document","self","transferableMessage","webkitPostMessage","_object","_vector","_transform","_transform_pos","_softbody_enabled","last_simulation_duration","_num_objects","_num_rigidbody_objects","_num_softbody_objects","_num_wheels","_num_constraints","_softbody_report_size","_vec3_1","_vec3_2","_vec3_3","_quat","public_functions","_objects","_vehicles","_constraints","_objects_ammo","_object_shapes","REPORT_CHUNKSIZE","softreport","collisionreport","vehiclereport","constraintreport","WORLDREPORT_ITEMSIZE","ab","ArrayBuffer","SUPPORT_TRANSFERABLE","byteLength","getShapeFromCache","cache_key","setShapeCache","shape","createShape","description","setIdentity","Ammo","btCompoundShape","normal","setX","setY","setZ","btStaticPlaneShape","width","height","depth","btBoxShape","radius","btSphereShape","btCylinderShape","btCapsuleShape","btConeShape","triangle_mesh","btTriangleMesh","addTriangle","btBvhTriangleMeshShape","btConvexHullShape","addPoint","xpts","ypts","points","ptr","_malloc","p","p2","j","HEAPF32","btHeightfieldTerrainShape","absMaxHeight","createSoftBody","body","softBodyHelpers","btSoftBodyHelpers","aVertices","CreateFromTriMesh","getWorldInfo","aIndices","cr","corners","CreatePatch","btVector3","segments","CreateRope","init","params","wasmBuffer","ammo","loadAmmoFromBinary","cmd","makeWorld","btTransform","btQuaternion","reportsize","Float32Array","WORLDREPORT","COLLISIONREPORT","VEHICLEREPORT","CONSTRAINTREPORT","collisionConfiguration","softbody","btSoftBodyRigidBodyCollisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","solver","btSequentialImpulseConstraintSolver","broadphase","aabbmin","aabbmax","btAxisSweep3","btDbvtBroadphase","btSoftRigidDynamicsWorld","btDefaultSoftBodySolver","btDiscreteDynamicsWorld","fixedTimeStep","setFixedTimeStep","setGravity","appendAnchor","log","node","obj2","collisionBetweenLinkedBodies","influence","addObject","motionState","sbConfig","get_m_cfg","viterations","set_viterations","piterations","set_piterations","diterations","set_diterations","citerations","set_citerations","set_collisions","set_kDF","friction","set_kDP","damping","pressure","set_kPR","drag","set_kDG","lift","set_kLF","anchorHardness","set_kAHR","rigidHardness","set_kCHR","klst","get_m_materials","at","set_m_kLST","kast","set_m_kAST","kvst","set_m_kVST","castObject","btCollisionObject","getCollisionShape","setMargin","margin","setActivationState","state","rope","cloth","setOrigin","setW","setRotation","transform","scale","setTotalMass","mass","addSoftBody","get_m_faces","size","get_m_nodes","compound_shape","addChildShape","_child","trans","destroy","setLocalScaling","calculateLocalInertia","btDefaultMotionState","rbInfo","btRigidBodyConstructionInfo","set_m_friction","set_m_restitution","restitution","set_m_linearDamping","set_m_angularDamping","btRigidBody","collision_flags","setCollisionFlags","group","mask","addRigidBody","activate","a","addVehicle","vehicle_tuning","btVehicleTuning","set_m_suspensionStiffness","set_m_suspensionCompression","set_m_suspensionDamping","set_m_maxSuspensionTravelCm","set_m_maxSuspensionForce","vehicle","btRaycastVehicle","rigidBody","btDefaultVehicleRaycaster","setCoordinateSystem","removeVehicle","addWheel","setSteering","details","setSteeringValue","setBrake","applyEngineForce","removeObject","removeSoftBody","removeRigidBody","_motion_states","_compound_shapes","_noncached_shapes","updateTransform","getMotionState","getWorldTransform","pos","quat","setWorldTransform","updateMass","setMassProps","applyCentralImpulse","applyImpulse","impulse_x","impulse_y","impulse_z","applyTorque","torque_x","torque_y","torque_z","applyCentralForce","applyForce","force_x","force_y","force_z","onSimulationResume","Date","now","setAngularVelocity","setLinearVelocity","setAngularFactor","setLinearFactor","setDamping","setCcdMotionThreshold","threshold","setCcdSweptSphereRadius","addConstraint","btPoint2PointConstraint","btHingeConstraint","transformb","transforma","getRotation","setEuler","btSliderConstraint","ta","tb","setEulerZYX","btConeTwistConstraint","setLimit","PI","btGeneric6DofConstraint","b","enableFeedback","removeConstraint","constraint_setBreakingImpulseThreshold","undefind","setBreakingImpulseThreshold","simulate","timeStep","maxSubSteps","ceil","stepSimulation","reportVehicles","reportConstraints","reportWorld_softbodies","hinge_setLimits","hinge_enableAngularMotor","enableAngularMotor","hinge_disableMotor","enableMotor","slider_setLimits","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","slider_setRestitution","setSoftnessLimLin","setSoftnessLimAng","slider_enableLinearMotor","setTargetLinMotorVelocity","setMaxLinMotorForce","setPoweredLinMotor","slider_disableLinearMotor","slider_enableAngularMotor","setTargetAngMotorVelocity","setMaxAngMotorForce","setPoweredAngMotor","slider_disableAngularMotor","conetwist_setLimit","conetwist_enableMotor","conetwist_setMaxMotorImpulse","setMaxMotorImpulse","conetwist_setMotorTarget","setMotorTarget","conetwist_disableMotor","dof_setLinearLowerLimit","setLinearLowerLimit","dof_setLinearUpperLimit","setLinearUpperLimit","dof_setAngularLowerLimit","setAngularLowerLimit","dof_setAngularUpperLimit","setAngularUpperLimit","dof_enableAngularMotor","motor","getRotationalLimitMotor","set_m_enableMotor","dof_configureAngularMotor","set_m_loLimit","set_m_hiLimit","set_m_targetVelocity","set_m_maxMotorForce","dof_disableAngularMotor","reportWorld","worldreport","getCenterOfMassTransform","origin","getOrigin","offset","getLinearVelocity","getAngularVelocity","SOFTREPORT","offsetVert","nodes","vert","get_m_x","off","get_m_n","faces","face","node1","node2","node3","vert1","vert2","vert3","normal1","normal2","normal3","reportCollisions","dp","getDispatcher","num","getNumManifolds","manifold","getManifoldByIndexInternal","num_contacts","getNumContacts","pt","getContactPoint","getBody0","getBody1","get_m_normalWorldOnB","getNumWheels","getWheelInfo","get_m_worldTransform","lenght","offset_body","getBreakingImpulseThreshold","event","WorldModule","bridge","defer","onAddCallback","bind","onRemoveCallback","Object","assign","start","performance","worker","PhysicsWorker","isLoaded","loader","Promise","resolve","reject","wasm","then","response","arrayBuffer","_materials_ref_counts","_is_simulating","_id","_temp","updateScene","updateSoftbodies","updateCollisions","updateVehicles","updateConstraints","debug","dir","info","__dirtyPosition","set","__dirtyRotation","linearVelocity","angularVelocity","attributes","geometry","volumePositions","array","isSoftBodyReset","volumeNormals","offs","x1","y1","z1","nx1","ny1","nz1","x2","y2","z2","nx2","ny2","nz2","x3","y3","z3","nx3","ny3","nz3","i9","needsUpdate","nx","ny","nz","extractRotation","matrix","addVectors","collisions","normal_offsets","object2","id1","touches","id2","component2","data2","vel","vel2","subVectors","temp1","temp2","normal_offset","emit","show_marker","getDefinition","marker","SphereGeometry","MeshNormalMaterial","BoxGeometry","native","manager","material","materialId","remove","pop","func","args","gravity","_stats","begin","object_id","update","isSoftbody","end","simulateLoop","Loop","clock","getDelta","properties","_native","vector3","scope","defineProperties","_x","_y","_z","__c_rot","onChange","euler","rot","wrapPhysicsPrototype","key","defineProperty","get","onCopy","onWrap","API","factor","defaults","define","has","module","rigidbody","BoxModule","PhysicsModule","updateData","boundingBox","computeBoundingBox","max","min","CompoundModule","CapsuleModule","ConcaveModule","geometryProcessor","isBuffer","vertices","vA","vB","vC","c","ConeModule","ConvexModule","_bufferGeometry","BufferGeometry","fromGeometry","CylinderModule","HeightfieldModule","verts","xdiv","ydiv","xsize","ysize","sqrt","abs","vNum","round","multiply","autoAlign","translate","Vector2","PlaneModule","SphereModule","boundingSphere","computeBoundingSphere","SoftbodyModule","idxGeometry","mergeVertices","bufferGeometry","addAttribute","BufferAttribute","copyVector3sArray","setIndex","Uint32Array","Uint16Array","copyIndicesArray","ndxGeometry","o1","o2","ClothModule","geomParams","geom","facesLength","normalsArray","i3","widthSegments","heightSegments","idx00","idx01","idx10","idx11","RopeModule","buff","fromArray","n","v1","v2","PI_2","FirstPersonControlsSolver","camera","velocityFactor","runVelocity","player","pitchObject","Object3D","yawObject","ypos","canJump","moveBackward","moveLeft","moveRight","on","otherObject","v","r","contactNormal","onMouseMove","enabled","movementX","mozMovementX","getMovementX","movementY","mozMovementY","getMovementY","onKeyDown","keyCode","onKeyUp","getObject","getDirection","multiplyVector3","targetVec","inputVelocity","delta","speed","moveForward","order","applyQuaternion","FirstPersonModule","block","getElementById","controls","element","pointerlockchange","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","style","display","pointerlockerror","warn","querySelector","requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","requestFullscreen","mozRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","fullscreenchange","fullscreenElement","mozFullscreenElement","mozFullScreenElement","updateProcessor","updateLoop"],"mappings":"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"}